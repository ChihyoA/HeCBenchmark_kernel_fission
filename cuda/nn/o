~/git/Polygeist/build/bin/mlir-clang -o nn nn_cuda.cu --function=* -resource-dir=/home/wmoses/git/Polygeist/mlir-build/lib/clang/14.0.0/ -I/home/wmoses/git/Polygeist/mlir-build/projects/openmp/runtime/src/ -I/mnt/Data/git/Polygeist/proj/rodinia/common// -include my_timing.h -include my_verification.h -D_MY_COMPILER_NAME_=\"polygeist\" --cuda-gpu-arch=sm_60 --cuda-path=/usr/local/cuda-11.2/ --cuda-lower --cpuify="distribute" -I/mnt/Data/git/Polygeist/proj/rodinia/common// -include my_timing.h -include my_verification.h -D_MY_COMPILER_NAME_=\"polygeist\" -lcudart_static -ldl -lrt -lpthread -lm -L/usr/local/cuda-11.2/lib64/ -L/home/wmoses/git/Polygeist/mlir-build/lib
~/git/Polygeist/build/bin/mlir-clang -o hurricane_gen hurricane_gen.c -lm --function=* -resource-dir=/home/wmoses/git/Polygeist/mlir-build/lib/clang/14.0.0/ -I/home/wmoses/git/Polygeist/mlir-build/projects/openmp/runtime/src/ -I/mnt/Data/git/Polygeist/proj/rodinia/common// -include my_timing.h -include my_verification.h -D_MY_COMPILER_NAME_=\"polygeist\"
nn_cuda.cu:114:2: warning: 'cudaThreadSynchronize' is deprecated [-Wdeprecated-declarations]
        cudaThreadSynchronize();
        ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:1011:8: note: 'cudaThreadSynchronize' has been explicitly marked deprecated here
extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaThreadSynchronize(void);
       ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:255:42: note: expanded from macro '__CUDA_DEPRECATED'
#define __CUDA_DEPRECATED __attribute__((deprecated))
                                         ^
nn_cuda.cu:120:2: warning: 'cudaThreadSynchronize' is deprecated [-Wdeprecated-declarations]
        cudaThreadSynchronize();
        ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:1011:8: note: 'cudaThreadSynchronize' has been explicitly marked deprecated here
extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaThreadSynchronize(void);
       ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:255:42: note: expanded from macro '__CUDA_DEPRECATED'
#define __CUDA_DEPRECATED __attribute__((deprecated))
                                         ^
nn_cuda.cu:171:5: warning: 'cudaThreadSynchronize' is deprecated [-Wdeprecated-declarations]
    cudaThreadSynchronize();
    ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:1011:8: note: 'cudaThreadSynchronize' has been explicitly marked deprecated here
extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaThreadSynchronize(void);
       ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:255:42: note: expanded from macro '__CUDA_DEPRECATED'
#define __CUDA_DEPRECATED __attribute__((deprecated))
                                         ^
CUDAKernelCallExpr 0x559133f43b10 'void'
|-ImplicitCastExpr 0x559133f43af8 'void (*)(LatLong *, float *, int, float, float)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x559133f26de8 'void (LatLong *, float *, int, float, float)' lvalue Function 0x559133ed16f8 'euclid' 'void (LatLong *, float *, int, float, float)'
|-CallExpr 0x559133f26ee0 'unsigned int'
| |-ImplicitCastExpr 0x559133f26ec8 'unsigned int (*)(dim3, dim3, size_t, void *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x559133f26e48 'unsigned int (dim3, dim3, size_t, void *)' lvalue Function 0x559133a5fcf0 '__cudaPushCallConfiguration' 'unsigned int (dim3, dim3, size_t, void *)'
| |-CXXConstructExpr 0x559133f26f38 'dim3':'struct dim3' 'void (const struct dim3 &) noexcept'
| | `-ImplicitCastExpr 0x559133f26f20 'const struct dim3' lvalue <NoOp>
| |   `-DeclRefExpr 0x559133f26e08 'dim3':'struct dim3' lvalue Var 0x559133f24bb0 'gridDim' 'dim3':'struct dim3'
| |-CXXConstructExpr 0x559133f43988 'dim3':'struct dim3' 'void (struct dim3 &&) noexcept' elidable
| | `-MaterializeTemporaryExpr 0x559133f43970 'dim3':'struct dim3' xvalue
| |   `-ImplicitCastExpr 0x559133f27018 'dim3':'struct dim3' <ConstructorConversion>
| |     `-CXXConstructExpr 0x559133f26fd8 'dim3':'struct dim3' 'void (unsigned int, unsigned int, unsigned int)'
| |       |-ImplicitCastExpr 0x559133f26f80 'unsigned int' <IntegralCast>
| |       | `-ImplicitCastExpr 0x559133f26f68 'unsigned long' <LValueToRValue>
| |       |   `-DeclRefExpr 0x559133f26e28 'unsigned long' lvalue Var 0x559133f23ab8 'threadsPerBlock' 'unsigned long'
| |       |-CXXDefaultArgExpr 0x559133f26f98 'unsigned int'
| |       `-CXXDefaultArgExpr 0x559133f26fb8 'unsigned int'
| |-CXXDefaultArgExpr 0x559133f439b8 'size_t':'unsigned long'
| `-CXXDefaultArgExpr 0x559133f439d8 'void *'
|-ImplicitCastExpr 0x559133f43b60 'LatLong *' <LValueToRValue>
| `-DeclRefExpr 0x559133f439f8 'LatLong *' lvalue Var 0x559133f22328 'd_locations' 'LatLong *'
|-ImplicitCastExpr 0x559133f43b78 'float *' <LValueToRValue>
| `-DeclRefExpr 0x559133f43a18 'float *' lvalue Var 0x559133f223c0 'd_distances' 'float *'
|-ImplicitCastExpr 0x559133f43b90 'int' <LValueToRValue>
| `-DeclRefExpr 0x559133f43a38 'int' lvalue Var 0x559133f21f48 'numRecords' 'int'
|-ImplicitCastExpr 0x559133f43ba8 'float' <LValueToRValue>
| `-DeclRefExpr 0x559133f43a58 'float' lvalue Var 0x559133ed2e40 'lat' 'float'
`-ImplicitCastExpr 0x559133f43bc0 'float' <LValueToRValue>
  `-DeclRefExpr 0x559133f43a78 'float' lvalue Var 0x559133ed2ec0 'lng' 'float'
cleanup not handled
CXXMemberCallExpr 0x559133f9ce48 'void'
|-MemberExpr 0x559133f9ce00 '<bound member function type>' ->_M_realloc_insert 0x559133f9cce8
| `-CXXThisExpr 0x559133f9cdf0 'class std::vector<struct latLong> *' implicit this
|-CXXConstructExpr 0x559133f9e2b8 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' 'void (class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> > &&) noexcept' elidable
| `-MaterializeTemporaryExpr 0x559133f9e070 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' xvalue
|   `-CXXMemberCallExpr 0x559133f9a2a8 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >'
|     `-MemberExpr 0x559133f9a278 '<bound member function type>' ->end 0x559133f0a9b8
|       `-CXXThisExpr 0x559133f9a268 'class std::vector<struct latLong> *' implicit this
`-DeclRefExpr 0x559133f9ca80 'const std::vector<struct latLong>::value_type':'const struct latLong' lvalue ParmVar 0x559133f0ca80 '__x' 'const std::vector<struct latLong>::value_type &'
cleanup not handled
cleanup of materialized not handledCXXMemberCallExpr 0x559133fe0dc8 'void'
|-MemberExpr 0x559133fe0d80 '<bound member function type>' ->_M_realloc_insert 0x559133fe0c68
| `-CXXThisExpr 0x559133fe0d70 'class std::vector<struct record> *' implicit this
|-CXXConstructExpr 0x559133fe21b8 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' 'void (class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> > &&) noexcept' elidable
| `-MaterializeTemporaryExpr 0x559133fe1f78 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' xvalue
|   `-CXXMemberCallExpr 0x559133fd7828 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >'
|     `-MemberExpr 0x559133fd77f8 '<bound member function type>' ->end 0x559133ee5588
|       `-CXXThisExpr 0x559133fd77e8 'class std::vector<struct record> *' implicit this
`-DeclRefExpr 0x559133fe0a00 'const std::vector<struct record>::value_type':'const struct record' lvalue ParmVar 0x559133ee7650 '__x' 'const std::vector<struct record>::value_type &'
cleanup not handled
ImplicitCastExpr 0x559133fa1b38 'const std::vector::size_type':'const unsigned long' <IntegralCast>
`-CXXOperatorCallExpr 0x559133fa1b00 'typename __normal_iterator<struct latLong *, class vector<struct latLong> >::difference_type':'long' '-' adl
  |-ImplicitCastExpr 0x559133fa1ae8 'typename __normal_iterator<struct latLong *, class vector<struct latLong> >::difference_type (*)(const __normal_iterator<struct latLong *, class std::vector<struct latLong> > &, const __normal_iterator<struct latLong *, class std::vector<struct latLong> > &) noexcept' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x559133fa1a68 'typename __normal_iterator<struct latLong *, class vector<struct latLong> >::difference_type (const __normal_iterator<struct latLong *, class std::vector<struct latLong> > &, const __normal_iterator<struct latLong *, class std::vector<struct latLong> > &) noexcept' lvalue Function 0x559133fa1900 'operator-' 'typename __normal_iterator<struct latLong *, class vector<struct latLong> >::difference_type (const __normal_iterator<struct latLong *, class std::vector<struct latLong> > &, const __normal_iterator<struct latLong *, class std::vector<struct latLong> > &) noexcept'
  |-ImplicitCastExpr 0x559133fa1a20 'const __normal_iterator<struct latLong *, class std::vector<struct latLong> >':'const class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' lvalue <NoOp>
  | `-DeclRefExpr 0x559133fa0b68 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' lvalue ParmVar 0x559133f9cb08 '__position' 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >'
  `-MaterializeTemporaryExpr 0x559133fa1a50 'const std::vector<struct latLong>::iterator':'const class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' lvalue
    `-ImplicitCastExpr 0x559133fa1a38 'const std::vector<struct latLong>::iterator':'const class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' <NoOp>
      `-CXXMemberCallExpr 0x559133fa0c48 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >'
        `-MemberExpr 0x559133fa0c18 '<bound member function type>' ->begin 0x559133f0a7a0
          `-CXXThisExpr 0x559133fa0c08 'class std::vector<struct latLong> *' implicit this
cleanup not handled
warning potential store type mismatch:
val: %23 = llvm.getelementptr %22[%c0_i32_2, %c0_i32_3] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>> tosval: %24 = memref.load %3[%c0_4] : memref<?xmemref<?x2xf32>>
mt: memref<?x2xf32>spt: !llvm.ptr<struct<(f32, f32)>>
warning potential store type mismatch:
val: %24 = llvm.getelementptr %23[%c0_i32_2, %c1_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>> tosval: %25 = memref.load %1[%c0_3] : memref<?xmemref<?x2xf32>>
mt: memref<?x2xf32>spt: !llvm.ptr<struct<(f32, f32)>>
warning potential store type mismatch:
val: %25 = llvm.getelementptr %24[%c0_i32_2, %c2_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>> tosval: %29 = "polygeist.subindex"(%26, %28) : (memref<?x2xf32>, index) -> memref<?x2xf32>
mt: memref<?x2xf32>spt: !llvm.ptr<struct<(f32, f32)>>
CXXConstructExpr 0x559133fa0680 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' 'void (class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> > &&) noexcept' elidable
`-MaterializeTemporaryExpr 0x559133fa0668 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' xvalue
  `-CXXFunctionalCastExpr 0x559133fa0608 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' functional cast to std::vector<struct latLong>::iterator <ConstructorConversion>
    `-CXXConstructExpr 0x559133fa05d8 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' 'void (struct latLong *const &) noexcept'
      `-ImplicitCastExpr 0x559133fa05c0 'struct latLong *const':'struct latLong *const' lvalue <NoOp>
        `-MemberExpr 0x559133fa0500 'std::_Vector_base<struct latLong, class std::allocator<struct latLong> >::pointer':'struct latLong *' lvalue ._M_finish 0x559133f03ad0
          `-MemberExpr 0x559133fa04b8 'struct std::_Vector_base<struct latLong, class std::allocator<struct latLong> >::_Vector_impl' lvalue ->_M_impl 0x559133f050a0
            `-ImplicitCastExpr 0x559133fa0498 'struct std::_Vector_base<struct latLong, class std::allocator<struct latLong> > *' <UncheckedDerivedToBase (_Vector_base)>
              `-CXXThisExpr 0x559133fa0488 'class std::vector<struct latLong> *' this
cleanup not handled
cleanup of materialized not handledImplicitCastExpr 0x559133fe55a8 'const std::vector::size_type':'const unsigned long' <IntegralCast>
`-CXXOperatorCallExpr 0x559133fe5570 'typename __normal_iterator<struct record *, class vector<struct record> >::difference_type':'long' '-' adl
  |-ImplicitCastExpr 0x559133fe5558 'typename __normal_iterator<struct record *, class vector<struct record> >::difference_type (*)(const __normal_iterator<struct record *, class std::vector<struct record> > &, const __normal_iterator<struct record *, class std::vector<struct record> > &) noexcept' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x559133fe54d8 'typename __normal_iterator<struct record *, class vector<struct record> >::difference_type (const __normal_iterator<struct record *, class std::vector<struct record> > &, const __normal_iterator<struct record *, class std::vector<struct record> > &) noexcept' lvalue Function 0x559133fe5370 'operator-' 'typename __normal_iterator<struct record *, class vector<struct record> >::difference_type (const __normal_iterator<struct record *, class std::vector<struct record> > &, const __normal_iterator<struct record *, class std::vector<struct record> > &) noexcept'
  |-ImplicitCastExpr 0x559133fe5490 'const __normal_iterator<struct record *, class std::vector<struct record> >':'const class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' lvalue <NoOp>
  | `-DeclRefExpr 0x559133fe45d8 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' lvalue ParmVar 0x559133fe0a88 '__position' 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >'
  `-MaterializeTemporaryExpr 0x559133fe54c0 'const std::vector<struct record>::iterator':'const class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' lvalue
    `-ImplicitCastExpr 0x559133fe54a8 'const std::vector<struct record>::iterator':'const class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' <NoOp>
      `-CXXMemberCallExpr 0x559133fe46b8 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >'
        `-MemberExpr 0x559133fe4688 '<bound member function type>' ->begin 0x559133ee5370
          `-CXXThisExpr 0x559133fe4678 'class std::vector<struct record> *' implicit this
cleanup not handled
cleanup of materialized not handledCXXConstructExpr 0x559133fe40f0 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' 'void (class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> > &&) noexcept' elidable
`-MaterializeTemporaryExpr 0x559133fe40d8 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' xvalue
  `-CXXFunctionalCastExpr 0x559133fe4078 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' functional cast to std::vector<struct record>::iterator <ConstructorConversion>
    `-CXXConstructExpr 0x559133fe4048 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' 'void (struct record *const &) noexcept'
      `-ImplicitCastExpr 0x559133fe4030 'struct record *const':'struct record *const' lvalue <NoOp>
        `-MemberExpr 0x559133fe3f70 'std::_Vector_base<struct record, class std::allocator<struct record> >::pointer':'struct record *' lvalue ._M_finish 0x559133ede670
          `-MemberExpr 0x559133fe3f28 'struct std::_Vector_base<struct record, class std::allocator<struct record> >::_Vector_impl' lvalue ->_M_impl 0x559133edfc40
            `-ImplicitCastExpr 0x559133fe3f08 'struct std::_Vector_base<struct record, class std::allocator<struct record> > *' <UncheckedDerivedToBase (_Vector_base)>
              `-CXXThisExpr 0x559133fe3ef8 'class std::vector<struct record> *' this
cleanup not handled
cleanup of materialized not handledBinaryOperator 0x559133fa6548 'unsigned long' '+'
|-CXXMemberCallExpr 0x559133fa5e58 'std::vector::size_type':'unsigned long'
| `-MemberExpr 0x559133fa5e28 '<bound member function type>' ->size 0x559133f0b320
|   `-CXXThisExpr 0x559133fa5e18 'const class std::vector<struct latLong> *' implicit this
`-ImplicitCastExpr 0x559133fa6530 'unsigned long':'unsigned long' <LValueToRValue>
  `-CallExpr 0x559133fa64d0 'const unsigned long':'const unsigned long' lvalue
    |-ImplicitCastExpr 0x559133fa64b8 'const unsigned long &(*)(const unsigned long &, const unsigned long &)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x559133fa62c0 'const unsigned long &(const unsigned long &, const unsigned long &)' lvalue Function 0x559133fa6138 'max' 'const unsigned long &(const unsigned long &, const unsigned long &)' (FunctionTemplate 0x559133ceeb98 'max')
    |-MaterializeTemporaryExpr 0x559133fa6500 'const unsigned long':'const unsigned long' lvalue
    | `-CXXMemberCallExpr 0x559133fa5f08 'std::vector::size_type':'unsigned long'
    |   `-MemberExpr 0x559133fa5ed8 '<bound member function type>' ->size 0x559133f0b320
    |     `-CXXThisExpr 0x559133fa5ec8 'const class std::vector<struct latLong> *' implicit this
    `-ImplicitCastExpr 0x559133fa6518 'const unsigned long':'const unsigned long' lvalue <NoOp>
      `-DeclRefExpr 0x559133fa5f28 'std::vector::size_type':'unsigned long' lvalue ParmVar 0x559133f1a550 '__n' 'std::vector::size_type':'unsigned long'
cleanup not handled
CXXConstructExpr 0x559133fa7370 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' 'void (class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> > &&) noexcept' elidable
`-MaterializeTemporaryExpr 0x559133fa7358 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' xvalue
  `-CXXFunctionalCastExpr 0x559133fa72f8 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' functional cast to std::vector<struct latLong>::iterator <ConstructorConversion>
    `-CXXConstructExpr 0x559133fa72c8 'std::vector<struct latLong>::iterator':'class __gnu_cxx::__normal_iterator<struct latLong *, class std::vector<struct latLong> >' 'void (struct latLong *const &) noexcept'
      `-ImplicitCastExpr 0x559133fa72b0 'struct latLong *const':'struct latLong *const' lvalue <NoOp>
        `-MemberExpr 0x559133fa71f0 'std::_Vector_base<struct latLong, class std::allocator<struct latLong> >::pointer':'struct latLong *' lvalue ._M_start 0x559133f03a70
          `-MemberExpr 0x559133fa71a8 'struct std::_Vector_base<struct latLong, class std::allocator<struct latLong> >::_Vector_impl' lvalue ->_M_impl 0x559133f050a0
            `-ImplicitCastExpr 0x559133fa7188 'struct std::_Vector_base<struct latLong, class std::allocator<struct latLong> > *' <UncheckedDerivedToBase (_Vector_base)>
              `-CXXThisExpr 0x559133fa7178 'class std::vector<struct latLong> *' this
cleanup not handled
cleanup of materialized not handledBinaryOperator 0x559133fe9a48 'unsigned long' '+'
|-CXXMemberCallExpr 0x559133fe9858 'std::vector::size_type':'unsigned long'
| `-MemberExpr 0x559133fe9828 '<bound member function type>' ->size 0x559133ee5ef0
|   `-CXXThisExpr 0x559133fe9818 'const class std::vector<struct record> *' implicit this
`-ImplicitCastExpr 0x559133fe9a30 'unsigned long':'unsigned long' <LValueToRValue>
  `-CallExpr 0x559133fe99d0 'const unsigned long':'const unsigned long' lvalue
    |-ImplicitCastExpr 0x559133fe99b8 'const unsigned long &(*)(const unsigned long &, const unsigned long &)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x559133fe9980 'const unsigned long &(const unsigned long &, const unsigned long &)' lvalue Function 0x559133fa6138 'max' 'const unsigned long &(const unsigned long &, const unsigned long &)' (FunctionTemplate 0x559133ceeb98 'max')
    |-MaterializeTemporaryExpr 0x559133fe9a00 'const unsigned long':'const unsigned long' lvalue
    | `-CXXMemberCallExpr 0x559133fe9908 'std::vector::size_type':'unsigned long'
    |   `-MemberExpr 0x559133fe98d8 '<bound member function type>' ->size 0x559133ee5ef0
    |     `-CXXThisExpr 0x559133fe98c8 'const class std::vector<struct record> *' implicit this
    `-ImplicitCastExpr 0x559133fe9a18 'const unsigned long':'const unsigned long' lvalue <NoOp>
      `-DeclRefExpr 0x559133fe9928 'std::vector::size_type':'unsigned long' lvalue ParmVar 0x559133eeefe0 '__n' 'std::vector::size_type':'unsigned long'
cleanup not handled
cleanup of materialized not handledCXXConstructExpr 0x559133fea870 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' 'void (class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> > &&) noexcept' elidable
`-MaterializeTemporaryExpr 0x559133fea858 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' xvalue
  `-CXXFunctionalCastExpr 0x559133fea7f8 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' functional cast to std::vector<struct record>::iterator <ConstructorConversion>
    `-CXXConstructExpr 0x559133fea7c8 'std::vector<struct record>::iterator':'class __gnu_cxx::__normal_iterator<struct record *, class std::vector<struct record> >' 'void (struct record *const &) noexcept'
      `-ImplicitCastExpr 0x559133fea7b0 'struct record *const':'struct record *const' lvalue <NoOp>
        `-MemberExpr 0x559133fea6f0 'std::_Vector_base<struct record, class std::allocator<struct record> >::pointer':'struct record *' lvalue ._M_start 0x559133ede610
          `-MemberExpr 0x559133fea6a8 'struct std::_Vector_base<struct record, class std::allocator<struct record> >::_Vector_impl' lvalue ->_M_impl 0x559133edfc40
            `-ImplicitCastExpr 0x559133fea688 'struct std::_Vector_base<struct record, class std::allocator<struct record> > *' <UncheckedDerivedToBase (_Vector_base)>
              `-CXXThisExpr 0x559133fea678 'class std::vector<struct record> *' this
cleanup not handled
warning recomputing common in arrayinitloopexpr
nn_cuda.cu:114:2: warning: 'cudaThreadSynchronize' is deprecated [-Wdeprecated-declarations]
        cudaThreadSynchronize();
        ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:1011:8: note: 'cudaThreadSynchronize' has been explicitly marked deprecated here
extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaThreadSynchronize(void);
       ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:255:42: note: expanded from macro '__CUDA_DEPRECATED'
#define __CUDA_DEPRECATED __attribute__((deprecated))
                                         ^
nn_cuda.cu:120:2: warning: 'cudaThreadSynchronize' is deprecated [-Wdeprecated-declarations]
        cudaThreadSynchronize();
        ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:1011:8: note: 'cudaThreadSynchronize' has been explicitly marked deprecated here
extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaThreadSynchronize(void);
       ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:255:42: note: expanded from macro '__CUDA_DEPRECATED'
#define __CUDA_DEPRECATED __attribute__((deprecated))
                                         ^
nn_cuda.cu:171:5: warning: 'cudaThreadSynchronize' is deprecated [-Wdeprecated-declarations]
    cudaThreadSynchronize();
    ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:1011:8: note: 'cudaThreadSynchronize' has been explicitly marked deprecated here
extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaThreadSynchronize(void);
       ^
/usr/local/cuda-11.2//include/cuda_runtime_api.h:255:42: note: expanded from macro '__CUDA_DEPRECATED'
#define __CUDA_DEPRECATED __attribute__((deprecated))
                                         ^
error: 'llvm.bitcast' op result #0 must be LLVM-compatible non-aggregate type, but got '!llvm.ptr<memref<?x2xf32>>'
module attributes {llvm.data_layout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64", llvm.target_triple = "nvptx64-nvidia-cuda"}  {
  llvm.mlir.global internal constant @str69("vector::_M_realloc_insert\00")
  llvm.mlir.global internal constant @str68("%s, %s, %.17g, %s, %s, %d,\0A\00")
  llvm.mlir.global internal constant @str67("polygeist\00")
  llvm.mlir.global internal constant @str66("HOSTNAME\00")
  llvm.mlir.global internal constant @str65("Could not open timing file %s, errno %d, %s\0A\00")
  llvm.mlir.global internal constant @str64("a\00")
  llvm.mlir.global external @stdout() : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
  llvm.mlir.global internal constant @str63("-\00")
  llvm.mlir.global internal constant @str62("MY_TIMING_FILE\00")
  llvm.mlir.global internal constant @str61("          you must declare both.\0A\0A\00")
  llvm.mlir.global internal constant @str60("       2. If you declare either the device or the platform,\0A\00")
  llvm.mlir.global internal constant @str59("Notes: 1. The filename is required as the first parameter.\0A\00")
  llvm.mlir.global internal constant @str58("-d [int]     Choose the device (must choose both platform and device)\0A\00")
  llvm.mlir.global internal constant @str57("-p [int]     Choose the platform (must choose both platform and device)\0A\00")
  llvm.mlir.global internal constant @str56("-t           Print timing information.\0A\00")
  llvm.mlir.global internal constant @str55("-q           Quiet mode. Suppress all text output.\0A\00")
  llvm.mlir.global internal constant @str54("-h, --help   Display the help file\0A\00")
  llvm.mlir.global internal constant @str53("-lng [float] the longitude for nearest neighbors (default: 0)\0A\00")
  llvm.mlir.global internal constant @str52("-lat [float] the latitude for nearest neighbors (default: 0)\0A\00")
  llvm.mlir.global internal constant @str51("-r [int]     the number of records to return (default: 10)\0A\00")
  llvm.mlir.global internal constant @str50("filename     the filename that lists the data input files\0A\00")
  llvm.mlir.global internal constant @str49("$ ./nearestNeighbor filelist.txt -r 5 -lat 30 -lng 90\0A\00")
  llvm.mlir.global internal constant @str48("example:\0A\00")
  llvm.mlir.global internal constant @str47("nearestNeighbor [filename] -r [int] -lat [float] -lng [float] [-hqt] [-p [int] -d [int]]\0A\00")
  llvm.mlir.global internal constant @str46("\0A\00")
  llvm.mlir.global internal constant @str45("Nearest Neighbor Usage\0A\00")
  llvm.func @atoi(!llvm.ptr<i8>) -> i32
  llvm.func @fgets(!llvm.ptr<i8>, i32, !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> !llvm.ptr<i8>
  llvm.mlir.global internal constant @str44("error opening a db\0A\00")
  llvm.mlir.global internal constant @str43("error reading filelist\0A\00")
  llvm.mlir.global internal constant @str42("%s\0A\00")
  llvm.func @fscanf(!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, ...) -> i32
  llvm.mlir.global internal constant @str41("r\00")
  llvm.mlir.global internal constant @str40("%s --> Distance=%f\0A\00")
  llvm.mlir.global internal constant @str39("total\00")
  llvm.func @free(!llvm.ptr<i8>)
  llvm.mlir.global internal constant @str38("Verification of %s ended\0Aresult: %s\0Alargest absolute error: %.17g\0Alargest relative error: %.17g\0Alargest relative error (between non-zero): %.17g\0A\00")
  llvm.mlir.global internal constant @str37("FAIL\00")
  llvm.mlir.global internal constant @str36("PASS\00")
  llvm.mlir.global internal constant @str35("Halting\0A\00")
  llvm.mlir.global internal constant @str34("result: FAIL\0A\00")
  llvm.mlir.global internal constant @str33("relative error: %.17g, between non-zero: %.17g, absolute_error: %.17g\0A\00")
  llvm.mlir.global internal constant @str32("%.9g != %.9g expected\0A\00")
  llvm.mlir.global internal constant @str31("Verification of %s failed at %s:%s, el %d\0A\00")
  llvm.func @fread(!llvm.ptr<i8>, i64, i64, !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i64
  llvm.func @malloc(i64) -> !llvm.ptr<i8>
  llvm.mlir.global internal constant @str30("rb\00")
  llvm.mlir.global internal constant @str29("Starting verification of %s of type %s from file %s\0A\00")
  llvm.func @fclose(!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32
  llvm.func @fwrite(!llvm.ptr<i8>, i64, i64, !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i64
  llvm.func @__errno_location() -> !llvm.ptr<i32>
  llvm.mlir.global internal constant @str28("Could not open file %s, errno %d, %s\0A\00")
  llvm.func @fopen(!llvm.ptr<i8>, !llvm.ptr<i8>) -> !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
  llvm.mlir.global internal constant @str27("wb\00")
  llvm.mlir.global internal constant @str26("float\00")
  llvm.mlir.global internal constant @str25("distances\00")
  llvm.mlir.global internal constant @str24("Dumping verification info of %s of type %s to file %s\0A\00")
  llvm.func @mkdir(!llvm.ptr<i8>, i32) -> i32
  llvm.mlir.global internal constant @str23("MY_VERIFICATION_DUMP\00")
  llvm.mlir.global internal constant @str22("%s/%s\00")
  llvm.mlir.global internal constant @str21("%s/%s/%s\00")
  llvm.func @sprintf(!llvm.ptr<i8>, !llvm.ptr<i8>, ...) -> i32
  llvm.mlir.global internal constant @str20("%s:%s\00")
  llvm.mlir.global internal constant @str19("182\00")
  llvm.func @strlen(!llvm.ptr<i8>) -> i64
  llvm.mlir.global internal constant @str18("MY_APP_NAME not defined, using empty string\0A\00")
  llvm.mlir.global internal constant @str17("MY_APP_NAME\00")
  llvm.func @strrchr(!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
  llvm.mlir.global internal constant @str16("nn_cuda.cu\00")
  llvm.mlir.global internal constant @str15("MY_VERIFICATION_HALT_WHEN_INCORRECT\00")
  llvm.func @strcmp(!llvm.ptr<i8>, !llvm.ptr<i8>) -> i32
  llvm.mlir.global internal constant @str14("\00")
  llvm.func @getenv(!llvm.ptr<i8>) -> !llvm.ptr<i8>
  llvm.mlir.global internal constant @str13("MY_VERIFICATION_DIR\00")
  memref.global "private" @"main@static@_ZZ4mainE4done@init" : memref<1xi1> = dense<true>
  memref.global "private" @"main@static@_ZZ4mainE4done" : memref<1xi32> = uninitialized
  llvm.mlir.global internal constant @str12("euclid\00")
  llvm.mlir.global internal constant @str11("nn\00")
  llvm.func @cudaMemcpy(!llvm.ptr<i8>, !llvm.ptr<i8>, i64, i32) -> i32
  llvm.mlir.global internal constant @str10("gridX: %lu\0A\00")
  llvm.mlir.global internal constant @str9("gridY: %lu\0A\00")
  llvm.mlir.global internal constant @str8("blocks: %lu\0A\00")
  llvm.mlir.global internal constant @str7("maxThreads: %lu\0A\00")
  llvm.mlir.global internal constant @str6("threadsPerBlock: %lu\0A\00")
  llvm.mlir.global internal constant @str5("deviceProp.maxThreadsPerBlock: %lu\0A\00")
  llvm.mlir.global internal constant @str4("maxGridX: %lu\0A\00")
  llvm.mlir.global internal constant @str3("usableDeviceMemory: %lu\0A\00")
  llvm.mlir.global internal constant @str2("freeDeviceMemory: %lu\0A\00")
  llvm.func @printf(!llvm.ptr<i8>, ...) -> i32
  llvm.mlir.global internal constant @str1("totalDeviceMemory: %lu\0A\00")
  llvm.func @fprintf(!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, ...) -> i32
  llvm.mlir.global internal constant @str0("Error: Input too large.\0A\00")
  llvm.mlir.global external @stderr() : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
  llvm.func @clock_gettime(i32, !llvm.ptr<struct<(i64, i64)>>) -> i32
  func private @cudaFuncGetAttributes(%arg0: !llvm.ptr<struct<(i64, i64, i64, i32, i32, i32, i32, i32, i32, i32)>>, %arg1: !llvm.ptr<i8>) -> i32 attributes {llvm.linkage = #llvm.linkage<weak>} {
    %c999_i32 = arith.constant 999 : i32
    return %c999_i32 : i32
  }
  func private @cudaDeviceGetAttribute(%arg0: memref<?xi32>, %arg1: i32, %arg2: i32) -> i32 attributes {llvm.linkage = #llvm.linkage<weak>} {
    %c999_i32 = arith.constant 999 : i32
    return %c999_i32 : i32
  }
  func private @cudaOccupancyMaxActiveBlocksPerMultiprocessor(%arg0: memref<?xi32>, %arg1: !llvm.ptr<i8>, %arg2: i32, %arg3: i64) -> i32 attributes {llvm.linkage = #llvm.linkage<weak>} {
    %c999_i32 = arith.constant 999 : i32
    return %c999_i32 : i32
  }
  func private @cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(%arg0: memref<?xi32>, %arg1: !llvm.ptr<i8>, %arg2: i32, %arg3: i64, %arg4: i32) -> i32 attributes {llvm.linkage = #llvm.linkage<weak>} {
    %c999_i32 = arith.constant 999 : i32
    return %c999_i32 : i32
  }
  func private @_Z21__device_stub__euclidP7latLongPfiff(%arg0: memref<?x2xf32>, %arg1: memref<?xf32>, %arg2: i32, %arg3: f32, %arg4: f32) attributes {llvm.linkage = #llvm.linkage<external>} {
    %c0 = arith.constant 0 : index
    %c1 = arith.constant 1 : index
    %0 = "gpu.block_dim"() {dimension = "x"} : () -> index
    %1 = arith.index_cast %0 : index to i32
    %2 = "gpu.grid_dim"() {dimension = "x"} : () -> index
    %3 = arith.index_cast %2 : index to i32
    %4 = "gpu.block_id"() {dimension = "y"} : () -> index
    %5 = arith.index_cast %4 : index to i32
    %6 = arith.muli %3, %5 : i32
    %7 = "gpu.block_id"() {dimension = "x"} : () -> index
    %8 = arith.index_cast %7 : index to i32
    %9 = arith.addi %6, %8 : i32
    %10 = arith.muli %1, %9 : i32
    %11 = "gpu.thread_id"() {dimension = "x"} : () -> index
    %12 = arith.index_cast %11 : index to i32
    %13 = arith.addi %10, %12 : i32
    %14 = arith.index_cast %13 : i32 to index
    %15 = arith.cmpi slt, %13, %arg2 : i32
    scf.if %15 {
      %16 = memref.load %arg0[%14, %c0] : memref<?x2xf32>
      %17 = arith.subf %arg3, %16 : f32
      %18 = memref.load %arg0[%14, %c0] : memref<?x2xf32>
      %19 = arith.subf %arg3, %18 : f32
      %20 = arith.mulf %17, %19 : f32
      %21 = memref.load %arg0[%14, %c1] : memref<?x2xf32>
      %22 = arith.subf %arg4, %21 : f32
      %23 = memref.load %arg0[%14, %c1] : memref<?x2xf32>
      %24 = arith.subf %arg4, %23 : f32
      %25 = arith.mulf %22, %24 : f32
      %26 = arith.addf %20, %25 : f32
      %27 = math.sqrt %26 : f32
      memref.store %27, %arg1[%14] : memref<?xf32>
    }
    return
  }
  func @main(%arg0: i32, %arg1: !llvm.ptr<ptr<i8>>) -> i32 attributes {llvm.linkage = #llvm.linkage<external>} {
    %true = arith.constant true
    %c1_i64 = arith.constant 1 : i64
    %c0 = arith.constant 0 : index
    %c2 = arith.constant 2 : index
    %c1 = arith.constant 1 : index
    %c0_i32 = arith.constant 0 : i32
    %c10_i32 = arith.constant 10 : i32
    %false = arith.constant false
    %c1_i32 = arith.constant 1 : i32
    %c11_i32 = arith.constant 11 : i32
    %c0_i64 = arith.constant 0 : i64
    %c9_i32 = arith.constant 9 : i32
    %c256_i32 = arith.constant 256 : i32
    %c85_i64 = arith.constant 85 : i64
    %c100_i64 = arith.constant 100 : i64
    %c12_i64 = arith.constant 12 : i64
    %c4_i64 = arith.constant 4 : i64
    %c4 = arith.constant 4 : index
    %c8_i64 = arith.constant 8 : i64
    %cst = arith.constant 1.000000e-09 : f64
    %c2_i32 = arith.constant 2 : i32
    %c47_i32 = arith.constant 47 : i32
    %c2_i64 = arith.constant 2 : i64
    %c3_i64 = arith.constant 3 : i64
    %c511_i32 = arith.constant 511 : i32
    %cst_0 = arith.constant 0.000000e+00 : f64
    %cst_1 = arith.constant 0.000000e+00 : f32
    %cst_2 = arith.constant 1.17549435E-38 : f32
    %cst_3 = arith.constant 3.05175781E-5 : f32
    %cst_4 = arith.constant 3.40282347E+38 : f32
    %c-1_i64 = arith.constant -1 : i64
    %0 = llvm.alloca %c1_i64 x !llvm.ptr<i8> : (i64) -> !llvm.ptr<ptr<i8>>
    %1 = memref.alloca() : memref<1xf64>
    %2 = memref.alloca() : memref<1xf64>
    %3 = memref.alloca() : memref<1xf64>
    %4 = memref.alloca() : memref<1xf64>
    %5 = memref.alloca() : memref<1xf64>
    %6 = memref.alloca() : memref<1xf64>
    %7 = memref.alloca() : memref<1xi32>
    %8 = llvm.mlir.undef : i32
    memref.store %8, %7[%c0] : memref<1xi32>
    %9 = llvm.alloca %c1_i64 x !llvm.ptr<i8> : (i64) -> !llvm.ptr<ptr<i8>>
    %10 = llvm.alloca %c1_i64 x !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>> : (i64) -> !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
    %11 = llvm.alloca %c1_i64 x !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>> : (i64) -> !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
    %12 = llvm.alloca %c1_i64 x !llvm.array<1 x i8> : (i64) -> !llvm.ptr<array<1 x i8>>
    %13 = llvm.alloca %c1_i64 x !llvm.ptr<i8> : (i64) -> !llvm.ptr<ptr<i8>>
    %14 = llvm.alloca %c1_i64 x !llvm.ptr<i8> : (i64) -> !llvm.ptr<ptr<i8>>
    %15 = llvm.mlir.undef : i64
    %16 = llvm.alloca %c1_i64 x !llvm.ptr<i8> : (i64) -> !llvm.ptr<ptr<i8>>
    %17 = llvm.alloca %c1_i64 x !llvm.ptr<i8> : (i64) -> !llvm.ptr<ptr<i8>>
    %18 = memref.get_global @"main@static@_ZZ4mainE4done" : memref<1xi32>
    %19 = memref.alloca() : memref<1x3xi32>
    %20 = memref.cast %19 : memref<1x3xi32> to memref<?x3xi32>
    %21 = memref.alloca() : memref<1x3xi32>
    %22 = memref.cast %21 : memref<1x3xi32> to memref<?x3xi32>
    %23 = memref.alloca() : memref<1x3xi32>
    %24 = memref.cast %23 : memref<1x3xi32> to memref<?x3xi32>
    %25 = memref.alloca() : memref<1x2xi64>
    %26 = memref.alloca() : memref<1x2xi64>
    %27 = memref.alloca() : memref<1x3xi32>
    %28 = memref.cast %27 : memref<1x3xi32> to memref<?x3xi32>
    %29 = memref.alloca() : memref<1xi64>
    memref.store %15, %29[%c0] : memref<1xi64>
    %30 = memref.alloca() : memref<1xi64>
    memref.store %15, %30[%c0] : memref<1xi64>
    %31 = llvm.alloca %c1_i64 x !llvm.struct<(array<256 x i8>, struct<(array<16 x i8>)>, array<8 x i8>, i32, i64, i64, i32, i32, i64, i32, array<3 x i32>, array<3 x i32>, i32, i64, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, array<2 x i32>, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, array<3 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, i32, array<2 x i32>, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64)> : (i64) -> !llvm.ptr<struct<(array<256 x i8>, struct<(array<16 x i8>)>, array<8 x i8>, i32, i64, i64, i32, i32, i64, i32, array<3 x i32>, array<3 x i32>, i32, i64, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, array<2 x i32>, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, array<3 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, i32, array<2 x i32>, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64)>>
    %32 = memref.alloca() : memref<1xmemref<?xf32>>
    %33 = memref.alloca() : memref<1xmemref<?x2xf32>>
    %34 = memref.alloca() : memref<1xmemref<?xf32>>
    %35 = memref.alloca() : memref<1x2xi64>
    %36 = memref.alloca() : memref<1x2xi64>
    %37 = memref.alloca() : memref<1xi32>
    memref.store %8, %37[%c0] : memref<1xi32>
    %38 = llvm.alloca %c1_i64 x !llvm.array<100 x i8> : (i64) -> !llvm.ptr<array<100 x i8>>
    %39 = llvm.alloca %c1_i64 x !llvm.struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)> : (i64) -> !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>
    %40 = llvm.alloca %c1_i64 x !llvm.struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)> : (i64) -> !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>
    %41 = memref.alloca() : memref<1xi32>
    memref.store %8, %41[%c0] : memref<1xi32>
    %42 = memref.alloca() : memref<1xi32>
    memref.store %8, %42[%c0] : memref<1xi32>
    %43 = memref.alloca() : memref<1xi32>
    memref.store %8, %43[%c0] : memref<1xi32>
    %44 = memref.alloca() : memref<1xi32>
    memref.store %8, %44[%c0] : memref<1xi32>
    %45 = memref.alloca() : memref<1xf32>
    %46 = memref.alloca() : memref<1xf32>
    memref.store %c0_i32, %44[%c0] : memref<1xi32>
    memref.store %c0_i32, %43[%c0] : memref<1xi32>
    memref.store %c0_i32, %42[%c0] : memref<1xi32>
    memref.store %c0_i32, %41[%c0] : memref<1xi32>
    call @_ZNSt6vectorI6recordSaIS0_EEC1Ev(%40) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> ()
    call @_ZNSt6vectorI7latLongSaIS0_EEC1Ev(%39) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> ()
    memref.store %c10_i32, %37[%c0] : memref<1xi32>
    %47 = llvm.getelementptr %38[%c0_i32, %c0_i32] : (!llvm.ptr<array<100 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %48 = memref.cast %37 : memref<1xi32> to memref<?xi32>
    %49 = memref.cast %46 : memref<1xf32> to memref<?xf32>
    %50 = memref.cast %45 : memref<1xf32> to memref<?xf32>
    %51 = memref.cast %44 : memref<1xi32> to memref<?xi32>
    %52 = memref.cast %43 : memref<1xi32> to memref<?xi32>
    %53 = memref.cast %42 : memref<1xi32> to memref<?xi32>
    %54 = memref.cast %41 : memref<1xi32> to memref<?xi32>
    %55 = call @_Z16parseCommandlineiPPcS_PiPfS2_S1_S1_S1_S1_(%arg0, %arg1, %47, %48, %49, %50, %51, %52, %53, %54) : (i32, !llvm.ptr<ptr<i8>>, !llvm.ptr<i8>, memref<?xi32>, memref<?xf32>, memref<?xf32>, memref<?xi32>, memref<?xi32>, memref<?xi32>, memref<?xi32>) -> i32
    %56 = arith.cmpi ne, %55, %c0_i32 : i32
    %57 = arith.cmpi eq, %55, %c0_i32 : i32
    %58 = scf.if %56 -> (i32) {
      call @_Z10printUsagev() : () -> ()
      scf.yield %c0_i32 : i32
    } else {
      scf.yield %8 : i32
    }
    %59 = scf.if %57 -> (i32) {
      %71 = call @cudaDeviceSynchronize() : () -> i32
      %72 = "polygeist.memref2pointer"(%36) : (memref<1x2xi64>) -> !llvm.ptr<struct<(i64, i64)>>
      %73 = llvm.call @clock_gettime(%c1_i32, %72) : (i32, !llvm.ptr<struct<(i64, i64)>>) -> i32
      %74 = call @_Z8loadDataPcRSt6vectorI6recordSaIS1_EERS0_I7latLongSaIS5_EE(%47, %40, %39) : (!llvm.ptr<i8>, !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> i32
      scf.yield %74 : i32
    } else {
      scf.yield %8 : i32
    }
    %60:3 = scf.if %57 -> (i64, i64, i64) {
      %71 = memref.load %37[%c0] : memref<1xi32>
      %72 = arith.cmpi sgt, %71, %59 : i32
      scf.if %72 {
        memref.store %59, %37[%c0] : memref<1xi32>
      }
      %73 = call @cudaGetDeviceProperties(%31, %c0_i32) : (!llvm.ptr<struct<(array<256 x i8>, struct<(array<16 x i8>)>, array<8 x i8>, i32, i64, i64, i32, i32, i64, i32, array<3 x i32>, array<3 x i32>, i32, i64, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, array<2 x i32>, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, array<3 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, i32, array<2 x i32>, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64)>>, i32) -> i32
      %74 = call @cudaThreadSynchronize() : () -> i32
      %75 = llvm.getelementptr %31[%c0_i32, %c11_i32] : (!llvm.ptr<struct<(array<256 x i8>, struct<(array<16 x i8>)>, array<8 x i8>, i32, i64, i64, i32, i32, i64, i32, array<3 x i32>, array<3 x i32>, i32, i64, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, array<2 x i32>, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, array<3 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, i32, array<2 x i32>, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64)>>, i32, i32) -> !llvm.ptr<array<3 x i32>>
      %76 = llvm.getelementptr %75[%c0_i32, %c0_i32] : (!llvm.ptr<array<3 x i32>>, i32, i32) -> !llvm.ptr<i32>
      %77 = llvm.getelementptr %76[%c0_i64] : (!llvm.ptr<i32>, i64) -> !llvm.ptr<i32>
      %78 = llvm.load %77 : !llvm.ptr<i32>
      %79 = arith.extui %78 : i32 to i64
      %80 = llvm.getelementptr %31[%c0_i32, %c9_i32] : (!llvm.ptr<struct<(array<256 x i8>, struct<(array<16 x i8>)>, array<8 x i8>, i32, i64, i64, i32, i32, i64, i32, array<3 x i32>, array<3 x i32>, i32, i64, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, array<2 x i32>, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, array<3 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, i32, array<2 x i32>, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64)>>, i32, i32) -> !llvm.ptr<i32>
      %81 = llvm.load %80 : !llvm.ptr<i32>
      %82 = arith.cmpi sgt, %81, %c256_i32 : i32
      %83 = scf.if %82 -> (i32) {
        scf.yield %c256_i32 : i32
      } else {
        %92 = llvm.load %80 : !llvm.ptr<i32>
        scf.yield %92 : i32
      }
      %84 = arith.extui %83 : i32 to i64
      %85 = memref.cast %29 : memref<1xi64> to memref<?xi64>
      %86 = memref.cast %30 : memref<1xi64> to memref<?xi64>
      %87 = call @cudaMemGetInfo(%85, %86) : (memref<?xi64>, memref<?xi64>) -> i32
      %88 = call @cudaThreadSynchronize() : () -> i32
      %89 = memref.load %29[%c0] : memref<1xi64>
      %90 = arith.muli %89, %c85_i64 : i64
      %91 = arith.divui %90, %c100_i64 : i64
      scf.yield %79, %84, %91 : i64, i64, i64
    } else {
      scf.yield %15, %15, %15 : i64, i64, i64
    }
    %61 = scf.if %57 -> (i64) {
      %71 = arith.divui %60#2, %c12_i64 : i64
      scf.yield %71 : i64
    } else {
      scf.yield %15 : i64
    }
    %62 = scf.if %57 -> (i64) {
      %71 = arith.extui %59 : i32 to i64
      %72 = arith.cmpi ugt, %71, %61 : i64
      scf.if %72 {
        %76 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
        %77 = llvm.load %76 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
        %78 = llvm.mlir.addressof @str0 : !llvm.ptr<array<25 x i8>>
        %79 = llvm.getelementptr %78[%c0_i32, %c0_i32] : (!llvm.ptr<array<25 x i8>>, i32, i32) -> !llvm.ptr<i8>
        %80 = llvm.call @fprintf(%77, %79) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>) -> i32
        call @exit(%c1_i32) : (i32) -> ()
      }
      %73 = arith.addi %71, %60#1 : i64
      %74 = arith.addi %73, %c-1_i64 : i64
      %75 = arith.divui %74, %60#1 : i64
      scf.yield %75 : i64
    } else {
      scf.yield %15 : i64
    }
    %63 = scf.if %57 -> (i64) {
      %71 = arith.addi %62, %60#0 : i64
      %72 = arith.addi %71, %c-1_i64 : i64
      %73 = arith.divui %72, %60#0 : i64
      scf.yield %73 : i64
    } else {
      scf.yield %15 : i64
    }
    %64 = scf.if %57 -> (i64) {
      %71 = arith.addi %62, %63 : i64
      %72 = arith.addi %71, %c-1_i64 : i64
      %73 = arith.divui %72, %63 : i64
      scf.yield %73 : i64
    } else {
      scf.yield %15 : i64
    }
    scf.if %57 {
      %71 = arith.trunci %64 : i64 to i32
      %72 = arith.trunci %63 : i64 to i32
      call @_ZN4dim3C1Ejjj(%28, %71, %72, %c1_i32) : (memref<?x3xi32>, i32, i32, i32) -> ()
    }
    %65 = memref.load %34[%c0] : memref<1xmemref<?xf32>>
    %66 = scf.if %57 -> (memref<?xf32>) {
      %71 = arith.extui %59 : i32 to i64
      %72 = arith.muli %71, %c4_i64 : i64
      %73 = arith.index_cast %72 : i64 to index
      %74 = arith.divui %73, %c4 : index
      %75 = memref.alloc(%74) : memref<?xf32>
      memref.store %75, %34[%c0] : memref<1xmemref<?xf32>>
      scf.yield %75 : memref<?xf32>
    } else {
      scf.yield %65 : memref<?xf32>
    }
    %67 = memref.load %33[%c0] : memref<1xmemref<?x2xf32>>
    %68 = scf.if %57 -> (memref<?x2xf32>) {
      %71 = arith.extui %59 : i32 to i64
      %72 = arith.muli %71, %c8_i64 : i64
      %73 = arith.divui %72, %c8_i64 : i64
      %74 = arith.index_cast %73 : i64 to index
      %75 = memref.alloc(%74) : memref<?x2xf32>
      memref.store %75, %33[%c0] : memref<1xmemref<?x2xf32>>
      scf.yield %75 : memref<?x2xf32>
    } else {
      scf.yield %67 : memref<?x2xf32>
    }
    %69 = memref.load %32[%c0] : memref<1xmemref<?xf32>>
    %70 = scf.if %57 -> (memref<?xf32>) {
      %71 = arith.extui %59 : i32 to i64
      %72 = arith.muli %71, %c4_i64 : i64
      %73 = arith.divui %72, %c4_i64 : i64
      %74 = arith.index_cast %73 : i64 to index
      %75 = memref.alloc(%74) : memref<?xf32>
      memref.store %75, %32[%c0] : memref<1xmemref<?xf32>>
      %76 = "polygeist.memref2pointer"(%68) : (memref<?x2xf32>) -> !llvm.ptr<i8>
      %77 = call @_ZNSt6vectorI7latLongSaIS0_EEixEm(%39, %c0_i64) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, i64) -> memref<?x2xf32>
      %78 = "polygeist.memref2pointer"(%77) : (memref<?x2xf32>) -> !llvm.ptr<i8>
      %79 = arith.muli %71, %c8_i64 : i64
      %80 = llvm.call @cudaMemcpy(%76, %78, %79, %c1_i32) : (!llvm.ptr<i8>, !llvm.ptr<i8>, i64, i32) -> i32
      %81 = call @cudaDeviceSynchronize() : () -> i32
      %82 = "polygeist.memref2pointer"(%26) : (memref<1x2xi64>) -> !llvm.ptr<struct<(i64, i64)>>
      %83 = llvm.call @clock_gettime(%c1_i32, %82) : (i32, !llvm.ptr<struct<(i64, i64)>>) -> i32
      scf.yield %75 : memref<?xf32>
    } else {
      scf.yield %69 : memref<?xf32>
    }
    scf.if %57 {
      %71 = memref.load %46[%c0] : memref<1xf32>
      %72 = memref.load %45[%c0] : memref<1xf32>
      call @_ZN4dim3C1ERKS_(%24, %28) : (memref<?x3xi32>, memref<?x3xi32>) -> ()
      %73 = memref.load %23[%c0, %c0] : memref<1x3xi32>
      %74 = arith.index_cast %73 : i32 to index
      %75 = memref.load %23[%c0, %c1] : memref<1x3xi32>
      %76 = arith.index_cast %75 : i32 to index
      %77 = memref.load %23[%c0, %c2] : memref<1x3xi32>
      %78 = arith.index_cast %77 : i32 to index
      %79 = arith.trunci %60#1 : i64 to i32
      call @_ZN4dim3C1Ejjj(%20, %79, %c1_i32, %c1_i32) : (memref<?x3xi32>, i32, i32, i32) -> ()
      call @_ZN4dim3C1EOS_(%22, %20) : (memref<?x3xi32>, memref<?x3xi32>) -> ()
      %80 = memref.load %21[%c0, %c0] : memref<1x3xi32>
      %81 = arith.index_cast %80 : i32 to index
      %82 = memref.load %21[%c0, %c1] : memref<1x3xi32>
      %83 = arith.index_cast %82 : i32 to index
      %84 = memref.load %21[%c0, %c2] : memref<1x3xi32>
      %85 = arith.index_cast %84 : i32 to index
      gpu.launch blocks(%arg2, %arg3, %arg4) in (%arg8 = %74, %arg9 = %76, %arg10 = %78) threads(%arg5, %arg6, %arg7) in (%arg11 = %81, %arg12 = %83, %arg13 = %85) {
        call @_Z21__device_stub__euclidP7latLongPfiff(%68, %70, %59, %71, %72) : (memref<?x2xf32>, memref<?xf32>, i32, f32, f32) -> ()
        gpu.terminator
      }
      %86 = call @cudaDeviceSynchronize() : () -> i32
      %87 = "polygeist.memref2pointer"(%25) : (memref<1x2xi64>) -> !llvm.ptr<struct<(i64, i64)>>
      %88 = llvm.call @clock_gettime(%c1_i32, %87) : (i32, !llvm.ptr<struct<(i64, i64)>>) -> i32
      %89 = memref.load %25[%c0, %c0] : memref<1x2xi64>
      %90 = memref.load %26[%c0, %c0] : memref<1x2xi64>
      %91 = arith.subi %89, %90 : i64
      %92 = memref.load %25[%c0, %c1] : memref<1x2xi64>
      %93 = memref.load %26[%c0, %c1] : memref<1x2xi64>
      %94 = arith.subi %92, %93 : i64
      %95 = arith.sitofp %91 : i64 to f64
      %96 = arith.sitofp %94 : i64 to f64
      %97 = arith.mulf %96, %cst : f64
      %98 = arith.addf %95, %97 : f64
      %99 = llvm.mlir.addressof @str11 : !llvm.ptr<array<3 x i8>>
      %100 = llvm.getelementptr %99[%c0_i32, %c0_i32] : (!llvm.ptr<array<3 x i8>>, i32, i32) -> !llvm.ptr<i8>
      %101 = llvm.mlir.addressof @str12 : !llvm.ptr<array<7 x i8>>
      %102 = llvm.getelementptr %101[%c0_i32, %c0_i32] : (!llvm.ptr<array<7 x i8>>, i32, i32) -> !llvm.ptr<i8>
      call @_ZL21MY_WRITE_TIME_TO_FILEPKcS0_d(%100, %102, %98) : (!llvm.ptr<i8>, !llvm.ptr<i8>, f64) -> ()
      %103 = call @cudaThreadSynchronize() : () -> i32
      %104 = "polygeist.memref2pointer"(%66) : (memref<?xf32>) -> !llvm.ptr<i8>
      %105 = "polygeist.memref2pointer"(%70) : (memref<?xf32>) -> !llvm.ptr<i8>
      %106 = arith.extui %59 : i32 to i64
      %107 = arith.muli %106, %c4_i64 : i64
      %108 = llvm.call @cudaMemcpy(%104, %105, %107, %c2_i32) : (!llvm.ptr<i8>, !llvm.ptr<i8>, i64, i32) -> i32
      %109 = memref.get_global @"main@static@_ZZ4mainE4done@init" : memref<1xi1>
      %110 = memref.load %109[%c0] : memref<1xi1>
      scf.if %110 {
        memref.store %false, %109[%c0] : memref<1xi1>
        memref.store %c0_i32, %18[%c0] : memref<1xi32>
      }
      %111 = memref.load %18[%c0] : memref<1xi32>
      %112 = arith.cmpi ne, %111, %c0_i32 : i32
      %113 = arith.cmpi eq, %111, %c0_i32 : i32
      scf.if %112 {
      } else {
        memref.store %c1_i32, %18[%c0] : memref<1xi32>
      }
      %114 = llvm.load %17 : !llvm.ptr<ptr<i8>>
      %115 = scf.if %113 -> (!llvm.ptr<i8>) {
        %136 = llvm.mlir.addressof @str13 : !llvm.ptr<array<20 x i8>>
        %137 = llvm.getelementptr %136[%c0_i32, %c0_i32] : (!llvm.ptr<array<20 x i8>>, i32, i32) -> !llvm.ptr<i8>
        %138 = llvm.call @getenv(%137) : (!llvm.ptr<i8>) -> !llvm.ptr<i8>
        llvm.store %138, %17 : !llvm.ptr<ptr<i8>>
        scf.yield %138 : !llvm.ptr<i8>
      } else {
        scf.yield %114 : !llvm.ptr<i8>
      }
      scf.if %113 {
        %136 = llvm.mlir.null : !llvm.ptr<i8>
        %137 = llvm.icmp "ne" %115, %136 : !llvm.ptr<i8>
        %138 = scf.if %137 -> (i1) {
          %139 = llvm.mlir.addressof @str14 : !llvm.ptr<array<1 x i8>>
          %140 = llvm.getelementptr %139[%c0_i32, %c0_i32] : (!llvm.ptr<array<1 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %141 = llvm.call @strcmp(%115, %140) : (!llvm.ptr<i8>, !llvm.ptr<i8>) -> i32
          %142 = arith.cmpi ne, %141, %c0_i32 : i32
          scf.yield %142 : i1
        } else {
          scf.yield %false : i1
        }
        scf.if %138 {
          %139 = llvm.load %16 : !llvm.ptr<ptr<i8>>
          %140 = llvm.mlir.addressof @str15 : !llvm.ptr<array<36 x i8>>
          %141 = llvm.getelementptr %140[%c0_i32, %c0_i32] : (!llvm.ptr<array<36 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %142 = llvm.call @getenv(%141) : (!llvm.ptr<i8>) -> !llvm.ptr<i8>
          llvm.store %142, %16 : !llvm.ptr<ptr<i8>>
          %143 = arith.extsi %59 : i32 to i64
          %144 = arith.muli %143, %c4_i64 : i64
          %145 = llvm.load %14 : !llvm.ptr<ptr<i8>>
          %146 = llvm.mlir.addressof @str16 : !llvm.ptr<array<11 x i8>>
          %147 = llvm.getelementptr %146[%c0_i32, %c0_i32] : (!llvm.ptr<array<11 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %148 = llvm.call @strrchr(%147, %c47_i32) : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
          llvm.store %148, %14 : !llvm.ptr<ptr<i8>>
          %149 = llvm.icmp "ne" %148, %136 : !llvm.ptr<i8>
          %150 = arith.xori %149, %true : i1
          %151 = scf.if %150 -> (!llvm.ptr<i8>) {
            %201 = llvm.mlir.addressof @str16 : !llvm.ptr<array<11 x i8>>
            %202 = llvm.getelementptr %201[%c0_i32, %c0_i32] : (!llvm.ptr<array<11 x i8>>, i32, i32) -> !llvm.ptr<i8>
            llvm.store %202, %14 : !llvm.ptr<ptr<i8>>
            scf.yield %202 : !llvm.ptr<i8>
          } else {
            scf.yield %148 : !llvm.ptr<i8>
          }
          %152 = llvm.load %13 : !llvm.ptr<ptr<i8>>
          %153 = llvm.mlir.addressof @str17 : !llvm.ptr<array<12 x i8>>
          %154 = llvm.getelementptr %153[%c0_i32, %c0_i32] : (!llvm.ptr<array<12 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %155 = llvm.call @getenv(%154) : (!llvm.ptr<i8>) -> !llvm.ptr<i8>
          llvm.store %155, %13 : !llvm.ptr<ptr<i8>>
          %156 = llvm.mlir.addressof @str14 : !llvm.ptr<array<1 x i8>>
          %157 = llvm.load %156 : !llvm.ptr<array<1 x i8>>
          llvm.store %157, %12 : !llvm.ptr<array<1 x i8>>
          %158 = llvm.icmp "ne" %155, %136 : !llvm.ptr<i8>
          %159 = arith.xori %158, %true : i1
          %160 = scf.if %159 -> (!llvm.ptr<i8>) {
            %201 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %202 = llvm.load %201 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %203 = llvm.mlir.addressof @str18 : !llvm.ptr<array<45 x i8>>
            %204 = llvm.getelementptr %203[%c0_i32, %c0_i32] : (!llvm.ptr<array<45 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %205 = llvm.call @fprintf(%202, %204) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>) -> i32
            %206 = llvm.getelementptr %12[%c0_i32, %c0_i32] : (!llvm.ptr<array<1 x i8>>, i32, i32) -> !llvm.ptr<i8>
            llvm.store %206, %13 : !llvm.ptr<ptr<i8>>
            scf.yield %206 : !llvm.ptr<i8>
          } else {
            scf.yield %155 : !llvm.ptr<i8>
          }
          %161 = llvm.call @strlen(%151) : (!llvm.ptr<i8>) -> i64
          %162 = llvm.mlir.addressof @str19 : !llvm.ptr<array<4 x i8>>
          %163 = llvm.getelementptr %162[%c0_i32, %c0_i32] : (!llvm.ptr<array<4 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %164 = llvm.call @strlen(%163) : (!llvm.ptr<i8>) -> i64
          %165 = arith.addi %161, %164 : i64
          %166 = arith.addi %165, %c2_i64 : i64
          %167 = llvm.alloca %166 x i8 : (i64) -> !llvm.ptr<i8>
          %168 = llvm.bitcast %167 : !llvm.ptr<i8> to !llvm.ptr<array<0 x i8>>
          %169 = llvm.getelementptr %168[%c0_i32, %c0_i32] : (!llvm.ptr<array<0 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %170 = llvm.mlir.addressof @str20 : !llvm.ptr<array<6 x i8>>
          %171 = llvm.getelementptr %170[%c0_i32, %c0_i32] : (!llvm.ptr<array<6 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %172 = llvm.mlir.addressof @str19 : !llvm.ptr<array<4 x i8>>
          %173 = llvm.getelementptr %172[%c0_i32, %c0_i32] : (!llvm.ptr<array<4 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %174 = llvm.call @sprintf(%169, %171, %151, %173) : (!llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>) -> i32
          %175 = llvm.call @strlen(%169) : (!llvm.ptr<i8>) -> i64
          %176 = llvm.call @strlen(%115) : (!llvm.ptr<i8>) -> i64
          %177 = arith.addi %175, %176 : i64
          %178 = llvm.call @strlen(%160) : (!llvm.ptr<i8>) -> i64
          %179 = arith.addi %177, %178 : i64
          %180 = arith.addi %179, %c3_i64 : i64
          %181 = llvm.alloca %180 x i8 : (i64) -> !llvm.ptr<i8>
          %182 = llvm.bitcast %181 : !llvm.ptr<i8> to !llvm.ptr<array<0 x i8>>
          %183 = llvm.getelementptr %182[%c0_i32, %c0_i32] : (!llvm.ptr<array<0 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %184 = llvm.mlir.addressof @str21 : !llvm.ptr<array<9 x i8>>
          %185 = llvm.getelementptr %184[%c0_i32, %c0_i32] : (!llvm.ptr<array<9 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %186 = llvm.call @sprintf(%183, %185, %115, %160, %169) : (!llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>) -> i32
          %187 = llvm.call @strlen(%115) : (!llvm.ptr<i8>) -> i64
          %188 = llvm.call @strlen(%160) : (!llvm.ptr<i8>) -> i64
          %189 = arith.addi %187, %188 : i64
          %190 = arith.addi %189, %c2_i64 : i64
          %191 = llvm.alloca %190 x i8 : (i64) -> !llvm.ptr<i8>
          %192 = llvm.bitcast %191 : !llvm.ptr<i8> to !llvm.ptr<array<0 x i8>>
          %193 = llvm.getelementptr %192[%c0_i32, %c0_i32] : (!llvm.ptr<array<0 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %194 = llvm.mlir.addressof @str22 : !llvm.ptr<array<6 x i8>>
          %195 = llvm.getelementptr %194[%c0_i32, %c0_i32] : (!llvm.ptr<array<6 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %196 = llvm.call @sprintf(%193, %195, %115, %160) : (!llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>) -> i32
          %197 = llvm.mlir.addressof @str23 : !llvm.ptr<array<21 x i8>>
          %198 = llvm.getelementptr %197[%c0_i32, %c0_i32] : (!llvm.ptr<array<21 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %199 = llvm.call @getenv(%198) : (!llvm.ptr<i8>) -> !llvm.ptr<i8>
          %200 = llvm.icmp "ne" %199, %136 : !llvm.ptr<i8>
          scf.if %200 {
            %201 = llvm.call @mkdir(%193, %c511_i32) : (!llvm.ptr<i8>, i32) -> i32
            %202 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %203 = llvm.load %202 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %204 = llvm.mlir.addressof @str24 : !llvm.ptr<array<55 x i8>>
            %205 = llvm.getelementptr %204[%c0_i32, %c0_i32] : (!llvm.ptr<array<55 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %206 = llvm.mlir.addressof @str25 : !llvm.ptr<array<10 x i8>>
            %207 = llvm.getelementptr %206[%c0_i32, %c0_i32] : (!llvm.ptr<array<10 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %208 = llvm.mlir.addressof @str26 : !llvm.ptr<array<6 x i8>>
            %209 = llvm.getelementptr %208[%c0_i32, %c0_i32] : (!llvm.ptr<array<6 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %210 = llvm.call @fprintf(%203, %205, %207, %209, %183) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>) -> i32
            %211 = llvm.load %11 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %212 = llvm.mlir.addressof @str27 : !llvm.ptr<array<3 x i8>>
            %213 = llvm.getelementptr %212[%c0_i32, %c0_i32] : (!llvm.ptr<array<3 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %214 = llvm.call @fopen(%183, %213) : (!llvm.ptr<i8>, !llvm.ptr<i8>) -> !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
            llvm.store %214, %11 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %215 = llvm.mlir.null : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
            %216 = llvm.icmp "ne" %214, %215 : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
            %217 = arith.xori %216, %true : i1
            scf.if %217 {
              %220 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
              %221 = llvm.load %220 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
              %222 = llvm.mlir.addressof @str28 : !llvm.ptr<array<38 x i8>>
              %223 = llvm.getelementptr %222[%c0_i32, %c0_i32] : (!llvm.ptr<array<38 x i8>>, i32, i32) -> !llvm.ptr<i8>
              %224 = llvm.call @__errno_location() : () -> !llvm.ptr<i32>
              %225 = llvm.load %224 : !llvm.ptr<i32>
              %226 = llvm.call @__errno_location() : () -> !llvm.ptr<i32>
              %227 = llvm.load %226 : !llvm.ptr<i32>
              %228 = call @strerror(%227) : (i32) -> !llvm.ptr<i8>
              %229 = llvm.call @fprintf(%221, %223, %183, %225, %228) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, !llvm.ptr<i8>, i32, !llvm.ptr<i8>) -> i32
              call @exit(%c1_i32) : (i32) -> ()
            }
            %218 = llvm.call @fwrite(%104, %c4_i64, %143, %214) : (!llvm.ptr<i8>, i64, i64, !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i64
            %219 = llvm.call @fclose(%214) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32
          } else {
            %201 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %202 = llvm.load %201 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %203 = llvm.mlir.addressof @str29 : !llvm.ptr<array<53 x i8>>
            %204 = llvm.getelementptr %203[%c0_i32, %c0_i32] : (!llvm.ptr<array<53 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %205 = llvm.mlir.addressof @str25 : !llvm.ptr<array<10 x i8>>
            %206 = llvm.getelementptr %205[%c0_i32, %c0_i32] : (!llvm.ptr<array<10 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %207 = llvm.mlir.addressof @str26 : !llvm.ptr<array<6 x i8>>
            %208 = llvm.getelementptr %207[%c0_i32, %c0_i32] : (!llvm.ptr<array<6 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %209 = llvm.call @fprintf(%202, %204, %206, %208, %183) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>) -> i32
            %210 = llvm.load %10 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %211 = llvm.mlir.addressof @str30 : !llvm.ptr<array<3 x i8>>
            %212 = llvm.getelementptr %211[%c0_i32, %c0_i32] : (!llvm.ptr<array<3 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %213 = llvm.call @fopen(%183, %212) : (!llvm.ptr<i8>, !llvm.ptr<i8>) -> !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
            llvm.store %213, %10 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %214 = llvm.mlir.null : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
            %215 = llvm.icmp "ne" %213, %214 : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
            %216 = arith.xori %215, %true : i1
            scf.if %216 {
              %240 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
              %241 = llvm.load %240 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
              %242 = llvm.mlir.addressof @str28 : !llvm.ptr<array<38 x i8>>
              %243 = llvm.getelementptr %242[%c0_i32, %c0_i32] : (!llvm.ptr<array<38 x i8>>, i32, i32) -> !llvm.ptr<i8>
              %244 = llvm.call @__errno_location() : () -> !llvm.ptr<i32>
              %245 = llvm.load %244 : !llvm.ptr<i32>
              %246 = llvm.call @__errno_location() : () -> !llvm.ptr<i32>
              %247 = llvm.load %246 : !llvm.ptr<i32>
              %248 = call @strerror(%247) : (i32) -> !llvm.ptr<i8>
              %249 = llvm.call @fprintf(%241, %243, %183, %245, %248) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, !llvm.ptr<i8>, i32, !llvm.ptr<i8>) -> i32
              call @exit(%c1_i32) : (i32) -> ()
            }
            %217 = llvm.load %9 : !llvm.ptr<ptr<i8>>
            %218 = llvm.call @malloc(%144) : (i64) -> !llvm.ptr<i8>
            llvm.store %218, %9 : !llvm.ptr<ptr<i8>>
            %219 = llvm.call @fread(%218, %c4_i64, %143, %213) : (!llvm.ptr<i8>, i64, i64, !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i64
            memref.store %c1_i32, %7[%c0] : memref<1xi32>
            memref.store %cst_0, %6[%c0] : memref<1xf64>
            memref.store %cst_0, %5[%c0] : memref<1xf64>
            memref.store %cst_0, %4[%c0] : memref<1xf64>
            %220 = "polygeist.pointer2memref"(%218) : (!llvm.ptr<i8>) -> memref<?xf32>
            %221 = "polygeist.memref2pointer"(%66) : (memref<?xf32>) -> !llvm.ptr<f32>
            %222 = llvm.getelementptr %221[%143] : (!llvm.ptr<f32>, i64) -> !llvm.ptr<f32>
            %223:3 = scf.while (%arg2 = %220, %arg3 = %66) : (memref<?xf32>, memref<?xf32>) -> (memref<?xf32>, memref<?xf32>, memref<?xf32>) {
              %240 = "polygeist.memref2pointer"(%arg3) : (memref<?xf32>) -> !llvm.ptr<f32>
              %241 = llvm.icmp "ult" %240, %222 : !llvm.ptr<f32>
              scf.condition(%241) %arg2, %arg3, %66 : memref<?xf32>, memref<?xf32>, memref<?xf32>
            } do {
            ^bb0(%arg2: memref<?xf32>, %arg3: memref<?xf32>, %arg4: memref<?xf32>):  // no predecessors
              %240 = "polygeist.memref2pointer"(%arg3) : (memref<?xf32>) -> !llvm.ptr<f32>
              %241 = "polygeist.memref2pointer"(%arg4) : (memref<?xf32>) -> !llvm.ptr<f32>
              %242 = memref.load %arg3[%c0] : memref<?xf32>
              %243 = memref.load %arg2[%c0] : memref<?xf32>
              %244 = arith.cmpf ueq, %242, %243 : f32
              %245 = scf.if %244 -> (i1) {
                scf.yield %true : i1
              } else {
                %249 = memref.load %arg3[%c0] : memref<?xf32>
                %250 = memref.load %arg2[%c0] : memref<?xf32>
                %251 = arith.subf %249, %250 : f32
                %252 = arith.cmpf ugt, %251, %cst_1 : f32
                %253 = scf.if %252 -> (f32) {
                  %267 = memref.load %arg3[%c0] : memref<?xf32>
                  %268 = memref.load %arg2[%c0] : memref<?xf32>
                  %269 = arith.subf %267, %268 : f32
                  scf.yield %269 : f32
                } else {
                  %267 = memref.load %arg3[%c0] : memref<?xf32>
                  %268 = memref.load %arg2[%c0] : memref<?xf32>
                  %269 = arith.subf %267, %268 : f32
                  %270 = arith.negf %269 : f32
                  scf.yield %270 : f32
                }
                %254 = memref.load %arg3[%c0] : memref<?xf32>
                %255 = arith.cmpf ugt, %254, %cst_1 : f32
                %256 = scf.if %255 -> (f32) {
                  %267 = memref.load %arg3[%c0] : memref<?xf32>
                  scf.yield %267 : f32
                } else {
                  %267 = memref.load %arg3[%c0] : memref<?xf32>
                  %268 = arith.negf %267 : f32
                  scf.yield %268 : f32
                }
                %257 = memref.load %arg2[%c0] : memref<?xf32>
                %258 = arith.cmpf ugt, %257, %cst_1 : f32
                %259 = scf.if %258 -> (f32) {
                  %267 = memref.load %arg2[%c0] : memref<?xf32>
                  scf.yield %267 : f32
                } else {
                  %267 = memref.load %arg2[%c0] : memref<?xf32>
                  %268 = arith.negf %267 : f32
                  scf.yield %268 : f32
                }
                %260 = arith.addf %256, %259 : f32
                %261 = arith.cmpf ugt, %260, %cst_4 : f32
                %262 = scf.if %261 -> (f32) {
                  scf.yield %cst_4 : f32
                } else {
                  %267 = memref.load %arg3[%c0] : memref<?xf32>
                  %268 = arith.cmpf ugt, %267, %cst_1 : f32
                  %269 = scf.if %268 -> (f32) {
                    %274 = memref.load %arg3[%c0] : memref<?xf32>
                    scf.yield %274 : f32
                  } else {
                    %274 = memref.load %arg3[%c0] : memref<?xf32>
                    %275 = arith.negf %274 : f32
                    scf.yield %275 : f32
                  }
                  %270 = memref.load %arg2[%c0] : memref<?xf32>
                  %271 = arith.cmpf ugt, %270, %cst_1 : f32
                  %272 = scf.if %271 -> (f32) {
                    %274 = memref.load %arg2[%c0] : memref<?xf32>
                    scf.yield %274 : f32
                  } else {
                    %274 = memref.load %arg2[%c0] : memref<?xf32>
                    %275 = arith.negf %274 : f32
                    scf.yield %275 : f32
                  }
                  %273 = arith.addf %269, %272 : f32
                  scf.yield %273 : f32
                }
                %263 = arith.mulf %cst_3, %262 : f32
                %264 = arith.cmpf ugt, %cst_2, %263 : f32
                %265 = scf.if %264 -> (f32) {
                  scf.yield %cst_2 : f32
                } else {
                  %267 = memref.load %arg3[%c0] : memref<?xf32>
                  %268 = arith.cmpf ugt, %267, %cst_1 : f32
                  %269 = scf.if %268 -> (f32) {
                    %277 = memref.load %arg3[%c0] : memref<?xf32>
                    scf.yield %277 : f32
                  } else {
                    %277 = memref.load %arg3[%c0] : memref<?xf32>
                    %278 = arith.negf %277 : f32
                    scf.yield %278 : f32
                  }
                  %270 = memref.load %arg2[%c0] : memref<?xf32>
                  %271 = arith.cmpf ugt, %270, %cst_1 : f32
                  %272 = scf.if %271 -> (f32) {
                    %277 = memref.load %arg2[%c0] : memref<?xf32>
                    scf.yield %277 : f32
                  } else {
                    %277 = memref.load %arg2[%c0] : memref<?xf32>
                    %278 = arith.negf %277 : f32
                    scf.yield %278 : f32
                  }
                  %273 = arith.addf %269, %272 : f32
                  %274 = arith.cmpf ugt, %273, %cst_4 : f32
                  %275 = scf.if %274 -> (f32) {
                    scf.yield %cst_4 : f32
                  } else {
                    %277 = memref.load %arg3[%c0] : memref<?xf32>
                    %278 = arith.cmpf ugt, %277, %cst_1 : f32
                    %279 = scf.if %278 -> (f32) {
                      %284 = memref.load %arg3[%c0] : memref<?xf32>
                      scf.yield %284 : f32
                    } else {
                      %284 = memref.load %arg3[%c0] : memref<?xf32>
                      %285 = arith.negf %284 : f32
                      scf.yield %285 : f32
                    }
                    %280 = memref.load %arg2[%c0] : memref<?xf32>
                    %281 = arith.cmpf ugt, %280, %cst_1 : f32
                    %282 = scf.if %281 -> (f32) {
                      %284 = memref.load %arg2[%c0] : memref<?xf32>
                      scf.yield %284 : f32
                    } else {
                      %284 = memref.load %arg2[%c0] : memref<?xf32>
                      %285 = arith.negf %284 : f32
                      scf.yield %285 : f32
                    }
                    %283 = arith.addf %279, %282 : f32
                    scf.yield %283 : f32
                  }
                  %276 = arith.mulf %cst_3, %275 : f32
                  scf.yield %276 : f32
                }
                %266 = arith.cmpf ult, %253, %265 : f32
                scf.yield %266 : i1
              }
              %246 = arith.xori %245, %true : i1
              scf.if %246 {
                %249 = memref.load %arg3[%c0] : memref<?xf32>
                %250 = arith.cmpf ule, %249, %cst_2 : f32
                %251 = scf.if %250 -> (i1) {
                  scf.yield %true : i1
                } else {
                  %322 = memref.load %arg2[%c0] : memref<?xf32>
                  %323 = arith.cmpf ule, %322, %cst_2 : f32
                  scf.yield %323 : i1
                }
                %252 = scf.if %251 -> (f64) {
                  scf.yield %cst_0 : f64
                } else {
                  %322 = memref.load %arg3[%c0] : memref<?xf32>
                  %323 = memref.load %arg2[%c0] : memref<?xf32>
                  %324 = arith.subf %322, %323 : f32
                  %325 = arith.cmpf ugt, %324, %cst_1 : f32
                  %326 = scf.if %325 -> (f32) {
                    %337 = memref.load %arg3[%c0] : memref<?xf32>
                    %338 = memref.load %arg2[%c0] : memref<?xf32>
                    %339 = arith.subf %337, %338 : f32
                    scf.yield %339 : f32
                  } else {
                    %337 = memref.load %arg3[%c0] : memref<?xf32>
                    %338 = memref.load %arg2[%c0] : memref<?xf32>
                    %339 = arith.subf %337, %338 : f32
                    %340 = arith.negf %339 : f32
                    scf.yield %340 : f32
                  }
                  %327 = arith.extf %326 : f32 to f64
                  %328 = memref.load %arg3[%c0] : memref<?xf32>
                  %329 = arith.cmpf ugt, %328, %cst_1 : f32
                  %330 = scf.if %329 -> (f32) {
                    %337 = memref.load %arg3[%c0] : memref<?xf32>
                    scf.yield %337 : f32
                  } else {
                    %337 = memref.load %arg3[%c0] : memref<?xf32>
                    %338 = arith.negf %337 : f32
                    scf.yield %338 : f32
                  }
                  %331 = memref.load %arg2[%c0] : memref<?xf32>
                  %332 = arith.cmpf ugt, %331, %cst_1 : f32
                  %333 = scf.if %332 -> (f32) {
                    %337 = memref.load %arg2[%c0] : memref<?xf32>
                    scf.yield %337 : f32
                  } else {
                    %337 = memref.load %arg2[%c0] : memref<?xf32>
                    %338 = arith.negf %337 : f32
                    scf.yield %338 : f32
                  }
                  %334 = arith.addf %330, %333 : f32
                  %335 = arith.extf %334 : f32 to f64
                  %336 = arith.divf %327, %335 : f64
                  scf.yield %336 : f64
                }
                memref.store %252, %3[%c0] : memref<1xf64>
                %253 = memref.load %3[%c0] : memref<1xf64>
                %254 = memref.load %4[%c0] : memref<1xf64>
                %255 = arith.cmpf ugt, %253, %254 : f64
                %256 = select %255, %3, %4 : memref<1xf64>
                %257 = memref.load %256[%c0] : memref<1xf64>
                memref.store %257, %4[%c0] : memref<1xf64>
                %258 = memref.load %arg3[%c0] : memref<?xf32>
                %259 = memref.load %arg2[%c0] : memref<?xf32>
                %260 = arith.subf %258, %259 : f32
                %261 = arith.cmpf ugt, %260, %cst_1 : f32
                %262 = scf.if %261 -> (f32) {
                  %322 = memref.load %arg3[%c0] : memref<?xf32>
                  %323 = memref.load %arg2[%c0] : memref<?xf32>
                  %324 = arith.subf %322, %323 : f32
                  scf.yield %324 : f32
                } else {
                  %322 = memref.load %arg3[%c0] : memref<?xf32>
                  %323 = memref.load %arg2[%c0] : memref<?xf32>
                  %324 = arith.subf %322, %323 : f32
                  %325 = arith.negf %324 : f32
                  scf.yield %325 : f32
                }
                %263 = arith.extf %262 : f32 to f64
                %264 = memref.load %arg3[%c0] : memref<?xf32>
                %265 = arith.cmpf ugt, %264, %cst_1 : f32
                %266 = scf.if %265 -> (f32) {
                  %322 = memref.load %arg3[%c0] : memref<?xf32>
                  scf.yield %322 : f32
                } else {
                  %322 = memref.load %arg3[%c0] : memref<?xf32>
                  %323 = arith.negf %322 : f32
                  scf.yield %323 : f32
                }
                %267 = memref.load %arg2[%c0] : memref<?xf32>
                %268 = arith.cmpf ugt, %267, %cst_1 : f32
                %269 = scf.if %268 -> (f32) {
                  %322 = memref.load %arg2[%c0] : memref<?xf32>
                  scf.yield %322 : f32
                } else {
                  %322 = memref.load %arg2[%c0] : memref<?xf32>
                  %323 = arith.negf %322 : f32
                  scf.yield %323 : f32
                }
                %270 = arith.addf %266, %269 : f32
                %271 = arith.extf %270 : f32 to f64
                %272 = arith.divf %263, %271 : f64
                memref.store %272, %2[%c0] : memref<1xf64>
                %273 = memref.load %2[%c0] : memref<1xf64>
                %274 = memref.load %5[%c0] : memref<1xf64>
                %275 = arith.cmpf ugt, %273, %274 : f64
                %276 = select %275, %2, %5 : memref<1xf64>
                %277 = memref.load %276[%c0] : memref<1xf64>
                memref.store %277, %5[%c0] : memref<1xf64>
                %278 = memref.load %arg3[%c0] : memref<?xf32>
                %279 = memref.load %arg2[%c0] : memref<?xf32>
                %280 = arith.subf %278, %279 : f32
                %281 = arith.cmpf ugt, %280, %cst_1 : f32
                %282 = scf.if %281 -> (f32) {
                  %322 = memref.load %arg3[%c0] : memref<?xf32>
                  %323 = memref.load %arg2[%c0] : memref<?xf32>
                  %324 = arith.subf %322, %323 : f32
                  scf.yield %324 : f32
                } else {
                  %322 = memref.load %arg3[%c0] : memref<?xf32>
                  %323 = memref.load %arg2[%c0] : memref<?xf32>
                  %324 = arith.subf %322, %323 : f32
                  %325 = arith.negf %324 : f32
                  scf.yield %325 : f32
                }
                %283 = arith.extf %282 : f32 to f64
                memref.store %283, %1[%c0] : memref<1xf64>
                %284 = memref.load %1[%c0] : memref<1xf64>
                %285 = memref.load %6[%c0] : memref<1xf64>
                %286 = arith.cmpf ugt, %284, %285 : f64
                %287 = select %286, %1, %6 : memref<1xf64>
                %288 = memref.load %287[%c0] : memref<1xf64>
                memref.store %288, %6[%c0] : memref<1xf64>
                %289 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
                %290 = llvm.load %289 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
                %291 = llvm.mlir.addressof @str31 : !llvm.ptr<array<43 x i8>>
                %292 = llvm.getelementptr %291[%c0_i32, %c0_i32] : (!llvm.ptr<array<43 x i8>>, i32, i32) -> !llvm.ptr<i8>
                %293 = llvm.mlir.addressof @str25 : !llvm.ptr<array<10 x i8>>
                %294 = llvm.getelementptr %293[%c0_i32, %c0_i32] : (!llvm.ptr<array<10 x i8>>, i32, i32) -> !llvm.ptr<i8>
                %295 = llvm.mlir.addressof @str16 : !llvm.ptr<array<11 x i8>>
                %296 = llvm.getelementptr %295[%c0_i32, %c0_i32] : (!llvm.ptr<array<11 x i8>>, i32, i32) -> !llvm.ptr<i8>
                %297 = llvm.mlir.addressof @str19 : !llvm.ptr<array<4 x i8>>
                %298 = llvm.getelementptr %297[%c0_i32, %c0_i32] : (!llvm.ptr<array<4 x i8>>, i32, i32) -> !llvm.ptr<i8>
                %299 = llvm.ptrtoint %241 : !llvm.ptr<f32> to i64
                %300 = llvm.ptrtoint %240 : !llvm.ptr<f32> to i64
                %301 = arith.subi %300, %299 : i64
                %302 = arith.trunci %301 : i64 to i32
                %303 = llvm.call @fprintf(%290, %292, %294, %296, %298, %302) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>, i32) -> i32
                %304 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
                %305 = llvm.load %304 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
                %306 = llvm.mlir.addressof @str32 : !llvm.ptr<array<23 x i8>>
                %307 = llvm.getelementptr %306[%c0_i32, %c0_i32] : (!llvm.ptr<array<23 x i8>>, i32, i32) -> !llvm.ptr<i8>
                %308 = memref.load %arg3[%c0] : memref<?xf32>
                %309 = arith.extf %308 : f32 to f64
                %310 = memref.load %arg2[%c0] : memref<?xf32>
                %311 = arith.extf %310 : f32 to f64
                %312 = llvm.call @fprintf(%305, %307, %309, %311) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, f64, f64) -> i32
                %313 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
                %314 = llvm.load %313 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
                %315 = llvm.mlir.addressof @str33 : !llvm.ptr<array<71 x i8>>
                %316 = llvm.getelementptr %315[%c0_i32, %c0_i32] : (!llvm.ptr<array<71 x i8>>, i32, i32) -> !llvm.ptr<i8>
                %317 = memref.load %2[%c0] : memref<1xf64>
                %318 = memref.load %3[%c0] : memref<1xf64>
                %319 = memref.load %1[%c0] : memref<1xf64>
                %320 = llvm.call @fprintf(%314, %316, %317, %318, %319) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, f64, f64, f64) -> i32
                memref.store %c0_i32, %7[%c0] : memref<1xi32>
                %321 = llvm.icmp "ne" %142, %136 : !llvm.ptr<i8>
                scf.if %321 {
                  %322 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
                  %323 = llvm.load %322 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
                  %324 = llvm.mlir.addressof @str34 : !llvm.ptr<array<14 x i8>>
                  %325 = llvm.getelementptr %324[%c0_i32, %c0_i32] : (!llvm.ptr<array<14 x i8>>, i32, i32) -> !llvm.ptr<i8>
                  %326 = llvm.call @fprintf(%323, %325) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>) -> i32
                  %327 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
                  %328 = llvm.load %327 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
                  %329 = llvm.mlir.addressof @str35 : !llvm.ptr<array<9 x i8>>
                  %330 = llvm.getelementptr %329[%c0_i32, %c0_i32] : (!llvm.ptr<array<9 x i8>>, i32, i32) -> !llvm.ptr<i8>
                  %331 = llvm.call @fprintf(%328, %330) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>) -> i32
                  call @exit(%c1_i32) : (i32) -> ()
                }
              }
              %247 = "polygeist.subindex"(%arg3, %c1) : (memref<?xf32>, index) -> memref<?xf32>
              %248 = "polygeist.subindex"(%arg2, %c1) : (memref<?xf32>, index) -> memref<?xf32>
              scf.yield %248, %247 : memref<?xf32>, memref<?xf32>
            }
            %224 = llvm.load %0 : !llvm.ptr<ptr<i8>>
            %225 = memref.load %7[%c0] : memref<1xi32>
            %226 = arith.cmpi ne, %225, %c0_i32 : i32
            %227 = scf.if %226 -> (!llvm.ptr<i8>) {
              %240 = llvm.mlir.addressof @str36 : !llvm.ptr<array<5 x i8>>
              %241 = llvm.getelementptr %240[%c0_i32, %c0_i32] : (!llvm.ptr<array<5 x i8>>, i32, i32) -> !llvm.ptr<i8>
              llvm.store %241, %0 : !llvm.ptr<ptr<i8>>
              scf.yield %241 : !llvm.ptr<i8>
            } else {
              %240 = llvm.mlir.addressof @str37 : !llvm.ptr<array<5 x i8>>
              %241 = llvm.getelementptr %240[%c0_i32, %c0_i32] : (!llvm.ptr<array<5 x i8>>, i32, i32) -> !llvm.ptr<i8>
              llvm.store %241, %0 : !llvm.ptr<ptr<i8>>
              scf.yield %241 : !llvm.ptr<i8>
            }
            %228 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %229 = llvm.load %228 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
            %230 = llvm.mlir.addressof @str38 : !llvm.ptr<array<146 x i8>>
            %231 = llvm.getelementptr %230[%c0_i32, %c0_i32] : (!llvm.ptr<array<146 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %232 = llvm.mlir.addressof @str25 : !llvm.ptr<array<10 x i8>>
            %233 = llvm.getelementptr %232[%c0_i32, %c0_i32] : (!llvm.ptr<array<10 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %234 = memref.load %6[%c0] : memref<1xf64>
            %235 = memref.load %5[%c0] : memref<1xf64>
            %236 = memref.load %4[%c0] : memref<1xf64>
            %237 = llvm.call @fprintf(%229, %231, %233, %227, %234, %235, %236) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>, f64, f64, f64) -> i32
            %238 = llvm.bitcast %218 : !llvm.ptr<i8> to !llvm.ptr<i8>
            llvm.call @free(%238) : (!llvm.ptr<i8>) -> ()
            %239 = llvm.call @fclose(%213) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32
          }
        }
      }
      %116 = memref.load %37[%c0] : memref<1xi32>
      call @_Z10findLowestRSt6vectorI6recordSaIS0_EEPfii(%40, %66, %59, %116) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, memref<?xf32>, i32, i32) -> ()
      %117 = call @cudaDeviceSynchronize() : () -> i32
      %118 = "polygeist.memref2pointer"(%35) : (memref<1x2xi64>) -> !llvm.ptr<struct<(i64, i64)>>
      %119 = llvm.call @clock_gettime(%c1_i32, %118) : (i32, !llvm.ptr<struct<(i64, i64)>>) -> i32
      %120 = memref.load %35[%c0, %c0] : memref<1x2xi64>
      %121 = memref.load %36[%c0, %c0] : memref<1x2xi64>
      %122 = arith.subi %120, %121 : i64
      %123 = memref.load %35[%c0, %c1] : memref<1x2xi64>
      %124 = memref.load %36[%c0, %c1] : memref<1x2xi64>
      %125 = arith.subi %123, %124 : i64
      %126 = arith.sitofp %122 : i64 to f64
      %127 = arith.sitofp %125 : i64 to f64
      %128 = arith.mulf %127, %cst : f64
      %129 = arith.addf %126, %128 : f64
      %130 = llvm.mlir.addressof @str11 : !llvm.ptr<array<3 x i8>>
      %131 = llvm.getelementptr %130[%c0_i32, %c0_i32] : (!llvm.ptr<array<3 x i8>>, i32, i32) -> !llvm.ptr<i8>
      %132 = llvm.mlir.addressof @str39 : !llvm.ptr<array<6 x i8>>
      %133 = llvm.getelementptr %132[%c0_i32, %c0_i32] : (!llvm.ptr<array<6 x i8>>, i32, i32) -> !llvm.ptr<i8>
      call @_ZL21MY_WRITE_TIME_TO_FILEPKcS0_d(%131, %133, %129) : (!llvm.ptr<i8>, !llvm.ptr<i8>, f64) -> ()
      %134 = memref.load %44[%c0] : memref<1xi32>
      %135 = arith.cmpi eq, %134, %c0_i32 : i32
      scf.if %135 {
        %136 = scf.while (%arg2 = %c0_i32) : (i32) -> i32 {
          %137 = memref.load %37[%c0] : memref<1xi32>
          %138 = arith.cmpi slt, %arg2, %137 : i32
          scf.condition(%138) %arg2 : i32
        } do {
        ^bb0(%arg2: i32):  // no predecessors
          %137 = llvm.mlir.addressof @str40 : !llvm.ptr<array<20 x i8>>
          %138 = llvm.getelementptr %137[%c0_i32, %c0_i32] : (!llvm.ptr<array<20 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %139 = arith.extsi %arg2 : i32 to i64
          %140 = call @_ZNSt6vectorI6recordSaIS0_EEixEm(%40, %139) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
          %141 = llvm.getelementptr %140[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<array<53 x i8>>
          %142 = llvm.getelementptr %141[%c0_i32, %c0_i32] : (!llvm.ptr<array<53 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %143 = call @_ZNSt6vectorI6recordSaIS0_EEixEm(%40, %139) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
          %144 = llvm.getelementptr %143[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<f32>
          %145 = llvm.load %144 : !llvm.ptr<f32>
          %146 = arith.extf %145 : f32 to f64
          %147 = llvm.call @printf(%138, %142, %146) : (!llvm.ptr<i8>, !llvm.ptr<i8>, f64) -> i32
          %148 = arith.addi %arg2, %c1_i32 : i32
          scf.yield %148 : i32
        }
      }
      memref.dealloc %66 : memref<?xf32>
      memref.dealloc %68 : memref<?x2xf32>
      memref.dealloc %70 : memref<?xf32>
    }
    return %58 : i32
  }
  func @_ZNSt6vectorI6recordSaIS0_EEC1Ev(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>
    call @_ZNSt12_Vector_baseI6recordSaIS0_EEC1Ev(%0) : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>) -> ()
    return
  }
  func @_ZNSt6vectorI7latLongSaIS0_EEC1Ev(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>
    call @_ZNSt12_Vector_baseI7latLongSaIS0_EEC1Ev(%0) : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>) -> ()
    return
  }
  func @_Z16parseCommandlineiPPcS_PiPfS2_S1_S1_S1_S1_(%arg0: i32, %arg1: !llvm.ptr<ptr<i8>>, %arg2: !llvm.ptr<i8>, %arg3: memref<?xi32>, %arg4: memref<?xf32>, %arg5: memref<?xf32>, %arg6: memref<?xi32>, %arg7: memref<?xi32>, %arg8: memref<?xi32>, %arg9: memref<?xi32>) -> i32 attributes {llvm.linkage = #llvm.linkage<external>} {
    %false = arith.constant false
    %true = arith.constant true
    %c0 = arith.constant 0 : index
    %c1_i64 = arith.constant 1 : i64
    %c2_i32 = arith.constant 2 : i32
    %c1_i32 = arith.constant 1 : i32
    %c100_i64 = arith.constant 100 : i64
    %c0_i64 = arith.constant 0 : i64
    %c45_i32 = arith.constant 45 : i32
    %c2_i64 = arith.constant 2 : i64
    %c97_i32 = arith.constant 97 : i32
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.alloca %c1_i64 x i8 : (i64) -> !llvm.ptr<i8>
    %1 = llvm.mlir.undef : i8
    llvm.store %1, %0 : !llvm.ptr<i8>
    %2 = memref.alloca() : memref<1xi32>
    %3 = llvm.mlir.undef : i32
    memref.store %3, %2[%c0] : memref<1xi32>
    %4 = memref.alloca() : memref<i1>
    memref.store %true, %4[] : memref<i1>
    %5 = memref.alloca() : memref<i32>
    memref.store %3, %5[] : memref<i32>
    %6 = arith.cmpi slt, %arg0, %c2_i32 : i32
    %7 = arith.cmpi sge, %arg0, %c2_i32 : i32
    scf.if %6 {
      memref.store %c1_i32, %5[] : memref<i32>
      memref.store %false, %4[] : memref<i1>
    }
    scf.if %7 {
      %12 = llvm.getelementptr %arg1[%c1_i64] : (!llvm.ptr<ptr<i8>>, i64) -> !llvm.ptr<ptr<i8>>
      %13 = llvm.load %12 : !llvm.ptr<ptr<i8>>
      %14 = call @strncpy(%arg2, %13, %c100_i64) : (!llvm.ptr<i8>, !llvm.ptr<i8>, i64) -> !llvm.ptr<i8>
      memref.store %c1_i32, %2[%c0] : memref<1xi32>
      %15 = memref.alloca() : memref<i1>
      memref.store %true, %15[] : memref<i1>
      %16 = scf.while (%arg10 = %c1_i32) : (i32) -> i32 {
        %17 = arith.cmpi slt, %arg10, %arg0 : i32
        %18 = memref.load %15[] : memref<i1>
        %19 = arith.andi %17, %18 : i1
        scf.condition(%19) %arg10 : i32
      } do {
      ^bb0(%arg10: i32):  // no predecessors
        %17 = arith.index_cast %arg10 : i32 to index
        %18 = arith.index_cast %17 : index to i64
        %19 = llvm.getelementptr %arg1[%18] : (!llvm.ptr<ptr<i8>>, i64) -> !llvm.ptr<ptr<i8>>
        %20 = llvm.load %19 : !llvm.ptr<ptr<i8>>
        %21 = llvm.getelementptr %20[%c0_i64] : (!llvm.ptr<i8>, i64) -> !llvm.ptr<i8>
        %22 = llvm.load %21 : !llvm.ptr<i8>
        %23 = arith.extsi %22 : i8 to i32
        %24 = arith.cmpi eq, %23, %c45_i32 : i32
        scf.if %24 {
          %27 = llvm.load %0 : !llvm.ptr<i8>
          %28 = llvm.load %19 : !llvm.ptr<ptr<i8>>
          %29 = llvm.getelementptr %28[%c1_i64] : (!llvm.ptr<i8>, i64) -> !llvm.ptr<i8>
          %30 = llvm.load %29 : !llvm.ptr<i8>
          llvm.store %30, %0 : !llvm.ptr<i8>
          %31 = arith.extsi %30 : i8 to i32
          scf.execute_region {
            switch %31 : i32, [
              default: ^bb5,
              114: ^bb1(%arg3 : memref<?xi32>),
              108: ^bb2,
              104: ^bb3,
              113: ^bb4(%arg6 : memref<?xi32>),
              116: ^bb4(%arg7 : memref<?xi32>),
              112: ^bb1(%arg8 : memref<?xi32>),
              100: ^bb1(%arg9 : memref<?xi32>)
            ]
          ^bb1(%32: memref<?xi32>):  // 3 preds: ^bb0, ^bb0, ^bb0
            %33 = memref.load %2[%c0] : memref<1xi32>
            %34 = arith.addi %33, %c1_i32 : i32
            memref.store %34, %2[%c0] : memref<1xi32>
            %35 = arith.index_cast %34 : i32 to index
            %36 = arith.index_cast %35 : index to i64
            %37 = llvm.getelementptr %arg1[%36] : (!llvm.ptr<ptr<i8>>, i64) -> !llvm.ptr<ptr<i8>>
            %38 = llvm.load %37 : !llvm.ptr<ptr<i8>>
            %39 = llvm.call @atoi(%38) : (!llvm.ptr<i8>) -> i32
            memref.store %39, %32[%c0] : memref<?xi32>
            br ^bb5
          ^bb2:  // pred: ^bb0
            %40 = memref.load %2[%c0] : memref<1xi32>
            %41 = arith.index_cast %40 : i32 to index
            %42 = arith.index_cast %41 : index to i64
            %43 = llvm.getelementptr %arg1[%42] : (!llvm.ptr<ptr<i8>>, i64) -> !llvm.ptr<ptr<i8>>
            %44 = llvm.load %43 : !llvm.ptr<ptr<i8>>
            %45 = llvm.getelementptr %44[%c2_i64] : (!llvm.ptr<i8>, i64) -> !llvm.ptr<i8>
            %46 = llvm.load %45 : !llvm.ptr<i8>
            %47 = arith.extsi %46 : i8 to i32
            %48 = arith.cmpi eq, %47, %c97_i32 : i32
            scf.if %48 {
              %51 = arith.addi %40, %c1_i32 : i32
              %52 = arith.index_cast %51 : i32 to index
              %53 = arith.index_cast %52 : index to i64
              %54 = llvm.getelementptr %arg1[%53] : (!llvm.ptr<ptr<i8>>, i64) -> !llvm.ptr<ptr<i8>>
              %55 = llvm.load %54 : !llvm.ptr<ptr<i8>>
              %56 = call @atof(%55) : (!llvm.ptr<i8>) -> f64
              %57 = arith.truncf %56 : f64 to f32
              memref.store %57, %arg4[%c0] : memref<?xf32>
            } else {
              %51 = arith.addi %40, %c1_i32 : i32
              %52 = arith.index_cast %51 : i32 to index
              %53 = arith.index_cast %52 : index to i64
              %54 = llvm.getelementptr %arg1[%53] : (!llvm.ptr<ptr<i8>>, i64) -> !llvm.ptr<ptr<i8>>
              %55 = llvm.load %54 : !llvm.ptr<ptr<i8>>
              %56 = call @atof(%55) : (!llvm.ptr<i8>) -> f64
              %57 = arith.truncf %56 : f64 to f32
              memref.store %57, %arg5[%c0] : memref<?xf32>
            }
            %49 = arith.addi %40, %c1_i32 : i32
            memref.store %49, %2[%c0] : memref<1xi32>
            br ^bb5
          ^bb3:  // pred: ^bb0
            memref.store %c1_i32, %5[] : memref<i32>
            memref.store %false, %4[] : memref<i1>
            memref.store %false, %15[] : memref<i1>
            br ^bb5
          ^bb4(%50: memref<?xi32>):  // 2 preds: ^bb0, ^bb0
            memref.store %c1_i32, %50[%c0] : memref<?xi32>
            br ^bb5
          ^bb5:  // 5 preds: ^bb0, ^bb1, ^bb2, ^bb3, ^bb4
            scf.yield
          }
        }
        %25 = memref.load %2[%c0] : memref<1xi32>
        %26 = arith.addi %25, %c1_i32 : i32
        memref.store %26, %2[%c0] : memref<1xi32>
        scf.yield %26 : i32
      }
    }
    %8 = memref.load %4[] : memref<i1>
    %9 = memref.load %5[] : memref<i32>
    %10:2 = scf.if %8 -> (i1, i32) {
      %12 = memref.load %arg9[%c0] : memref<?xi32>
      %13 = arith.cmpi sge, %12, %c0_i32 : i32
      %14 = scf.if %13 -> (i1) {
        %18 = memref.load %arg8[%c0] : memref<?xi32>
        %19 = arith.cmpi slt, %18, %c0_i32 : i32
        scf.yield %19 : i1
      } else {
        scf.yield %false : i1
      }
      %15 = scf.if %14 -> (i1) {
        scf.yield %true : i1
      } else {
        %18 = memref.load %arg8[%c0] : memref<?xi32>
        %19 = arith.cmpi sge, %18, %c0_i32 : i32
        %20 = scf.if %19 -> (i1) {
          %21 = memref.load %arg9[%c0] : memref<?xi32>
          %22 = arith.cmpi slt, %21, %c0_i32 : i32
          scf.yield %22 : i1
        } else {
          scf.yield %false : i1
        }
        scf.yield %20 : i1
      }
      %16 = arith.xori %15, %true : i1
      %17 = scf.if %15 -> (i32) {
        memref.store %c1_i32, %5[] : memref<i32>
        memref.store %false, %4[] : memref<i1>
        scf.yield %c1_i32 : i32
      } else {
        scf.yield %9 : i32
      }
      scf.yield %16, %17 : i1, i32
    } else {
      scf.yield %false, %9 : i1, i32
    }
    %11 = scf.if %10#0 -> (i32) {
      memref.store %c0_i32, %5[] : memref<i32>
      memref.store %false, %4[] : memref<i1>
      scf.yield %c0_i32 : i32
    } else {
      scf.yield %10#1 : i32
    }
    return %11 : i32
  }
  func @_Z10printUsagev() attributes {llvm.linkage = #llvm.linkage<external>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.mlir.addressof @str45 : !llvm.ptr<array<24 x i8>>
    %1 = llvm.getelementptr %0[%c0_i32, %c0_i32] : (!llvm.ptr<array<24 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %2 = llvm.call @printf(%1) : (!llvm.ptr<i8>) -> i32
    %3 = llvm.mlir.addressof @str46 : !llvm.ptr<array<2 x i8>>
    %4 = llvm.getelementptr %3[%c0_i32, %c0_i32] : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %5 = llvm.call @printf(%4) : (!llvm.ptr<i8>) -> i32
    %6 = llvm.mlir.addressof @str47 : !llvm.ptr<array<90 x i8>>
    %7 = llvm.getelementptr %6[%c0_i32, %c0_i32] : (!llvm.ptr<array<90 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %8 = llvm.call @printf(%7) : (!llvm.ptr<i8>) -> i32
    %9 = llvm.mlir.addressof @str46 : !llvm.ptr<array<2 x i8>>
    %10 = llvm.getelementptr %9[%c0_i32, %c0_i32] : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %11 = llvm.call @printf(%10) : (!llvm.ptr<i8>) -> i32
    %12 = llvm.mlir.addressof @str48 : !llvm.ptr<array<10 x i8>>
    %13 = llvm.getelementptr %12[%c0_i32, %c0_i32] : (!llvm.ptr<array<10 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %14 = llvm.call @printf(%13) : (!llvm.ptr<i8>) -> i32
    %15 = llvm.mlir.addressof @str49 : !llvm.ptr<array<55 x i8>>
    %16 = llvm.getelementptr %15[%c0_i32, %c0_i32] : (!llvm.ptr<array<55 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %17 = llvm.call @printf(%16) : (!llvm.ptr<i8>) -> i32
    %18 = llvm.mlir.addressof @str46 : !llvm.ptr<array<2 x i8>>
    %19 = llvm.getelementptr %18[%c0_i32, %c0_i32] : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %20 = llvm.call @printf(%19) : (!llvm.ptr<i8>) -> i32
    %21 = llvm.mlir.addressof @str50 : !llvm.ptr<array<59 x i8>>
    %22 = llvm.getelementptr %21[%c0_i32, %c0_i32] : (!llvm.ptr<array<59 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %23 = llvm.call @printf(%22) : (!llvm.ptr<i8>) -> i32
    %24 = llvm.mlir.addressof @str51 : !llvm.ptr<array<60 x i8>>
    %25 = llvm.getelementptr %24[%c0_i32, %c0_i32] : (!llvm.ptr<array<60 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %26 = llvm.call @printf(%25) : (!llvm.ptr<i8>) -> i32
    %27 = llvm.mlir.addressof @str52 : !llvm.ptr<array<62 x i8>>
    %28 = llvm.getelementptr %27[%c0_i32, %c0_i32] : (!llvm.ptr<array<62 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %29 = llvm.call @printf(%28) : (!llvm.ptr<i8>) -> i32
    %30 = llvm.mlir.addressof @str53 : !llvm.ptr<array<63 x i8>>
    %31 = llvm.getelementptr %30[%c0_i32, %c0_i32] : (!llvm.ptr<array<63 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %32 = llvm.call @printf(%31) : (!llvm.ptr<i8>) -> i32
    %33 = llvm.mlir.addressof @str46 : !llvm.ptr<array<2 x i8>>
    %34 = llvm.getelementptr %33[%c0_i32, %c0_i32] : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %35 = llvm.call @printf(%34) : (!llvm.ptr<i8>) -> i32
    %36 = llvm.mlir.addressof @str54 : !llvm.ptr<array<36 x i8>>
    %37 = llvm.getelementptr %36[%c0_i32, %c0_i32] : (!llvm.ptr<array<36 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %38 = llvm.call @printf(%37) : (!llvm.ptr<i8>) -> i32
    %39 = llvm.mlir.addressof @str55 : !llvm.ptr<array<52 x i8>>
    %40 = llvm.getelementptr %39[%c0_i32, %c0_i32] : (!llvm.ptr<array<52 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %41 = llvm.call @printf(%40) : (!llvm.ptr<i8>) -> i32
    %42 = llvm.mlir.addressof @str56 : !llvm.ptr<array<40 x i8>>
    %43 = llvm.getelementptr %42[%c0_i32, %c0_i32] : (!llvm.ptr<array<40 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %44 = llvm.call @printf(%43) : (!llvm.ptr<i8>) -> i32
    %45 = llvm.mlir.addressof @str46 : !llvm.ptr<array<2 x i8>>
    %46 = llvm.getelementptr %45[%c0_i32, %c0_i32] : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %47 = llvm.call @printf(%46) : (!llvm.ptr<i8>) -> i32
    %48 = llvm.mlir.addressof @str57 : !llvm.ptr<array<73 x i8>>
    %49 = llvm.getelementptr %48[%c0_i32, %c0_i32] : (!llvm.ptr<array<73 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %50 = llvm.call @printf(%49) : (!llvm.ptr<i8>) -> i32
    %51 = llvm.mlir.addressof @str58 : !llvm.ptr<array<71 x i8>>
    %52 = llvm.getelementptr %51[%c0_i32, %c0_i32] : (!llvm.ptr<array<71 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %53 = llvm.call @printf(%52) : (!llvm.ptr<i8>) -> i32
    %54 = llvm.mlir.addressof @str46 : !llvm.ptr<array<2 x i8>>
    %55 = llvm.getelementptr %54[%c0_i32, %c0_i32] : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %56 = llvm.call @printf(%55) : (!llvm.ptr<i8>) -> i32
    %57 = llvm.mlir.addressof @str46 : !llvm.ptr<array<2 x i8>>
    %58 = llvm.getelementptr %57[%c0_i32, %c0_i32] : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %59 = llvm.call @printf(%58) : (!llvm.ptr<i8>) -> i32
    %60 = llvm.mlir.addressof @str59 : !llvm.ptr<array<60 x i8>>
    %61 = llvm.getelementptr %60[%c0_i32, %c0_i32] : (!llvm.ptr<array<60 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %62 = llvm.call @printf(%61) : (!llvm.ptr<i8>) -> i32
    %63 = llvm.mlir.addressof @str60 : !llvm.ptr<array<61 x i8>>
    %64 = llvm.getelementptr %63[%c0_i32, %c0_i32] : (!llvm.ptr<array<61 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %65 = llvm.call @printf(%64) : (!llvm.ptr<i8>) -> i32
    %66 = llvm.mlir.addressof @str61 : !llvm.ptr<array<35 x i8>>
    %67 = llvm.getelementptr %66[%c0_i32, %c0_i32] : (!llvm.ptr<array<35 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %68 = llvm.call @printf(%67) : (!llvm.ptr<i8>) -> i32
    return
  }
  func private @cudaDeviceSynchronize() -> i32 attributes {llvm.linkage = #llvm.linkage<external>}
  func @_Z8loadDataPcRSt6vectorI6recordSaIS1_EERS0_I7latLongSaIS5_EE(%arg0: !llvm.ptr<i8>, %arg1: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, %arg2: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> i32 attributes {llvm.linkage = #llvm.linkage<external>} {
    %c1 = arith.constant 1 : index
    %c0 = arith.constant 0 : index
    %c1_i64 = arith.constant 1 : i64
    %true = arith.constant true
    %c0_i32 = arith.constant 0 : i32
    %c0_i8 = arith.constant 0 : i8
    %c1_i32 = arith.constant 1 : i32
    %c49_i32 = arith.constant 49 : i32
    %c28_i32 = arith.constant 28 : i32
    %c5_i64 = arith.constant 5 : i64
    %c33_i32 = arith.constant 33 : i32
    %c5 = arith.constant 5 : index
    %0 = llvm.alloca %c1_i64 x !llvm.array<6 x i8> : (i64) -> !llvm.ptr<array<6 x i8>>
    %1 = memref.alloca() : memref<1x2xf32>
    %2 = memref.cast %1 : memref<1x2xf32> to memref<?x2xf32>
    %3 = llvm.alloca %c1_i64 x !llvm.struct<(array<53 x i8>, f32)> : (i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
    %4 = memref.alloca() : memref<1xi32>
    %5 = llvm.mlir.undef : i32
    memref.store %5, %4[%c0] : memref<1xi32>
    %6 = llvm.alloca %c1_i64 x !llvm.array<64 x i8> : (i64) -> !llvm.ptr<array<64 x i8>>
    %7 = llvm.alloca %c1_i64 x !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>> : (i64) -> !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
    %8 = llvm.alloca %c1_i64 x !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>> : (i64) -> !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
    memref.store %c0_i32, %4[%c0] : memref<1xi32>
    %9 = llvm.load %8 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
    %10 = llvm.mlir.addressof @str41 : !llvm.ptr<array<2 x i8>>
    %11 = llvm.getelementptr %10[%c0_i32, %c0_i32] : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %12 = llvm.call @fopen(%arg0, %11) : (!llvm.ptr<i8>, !llvm.ptr<i8>) -> !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
    llvm.store %12, %8 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
    %13 = llvm.getelementptr %6[%c0_i32, %c0_i32] : (!llvm.ptr<array<64 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %14 = llvm.mlir.null : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
    scf.while : () -> () {
      %17 = call @feof(%12) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32
      %18 = arith.cmpi eq, %17, %c0_i32 : i32
      scf.condition(%18)
    } do {
      %17 = llvm.mlir.addressof @str42 : !llvm.ptr<array<4 x i8>>
      %18 = llvm.getelementptr %17[%c0_i32, %c0_i32] : (!llvm.ptr<array<4 x i8>>, i32, i32) -> !llvm.ptr<i8>
      %19 = llvm.call @fscanf(%12, %18, %13) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, !llvm.ptr<i8>) -> i32
      %20 = arith.cmpi ne, %19, %c1_i32 : i32
      scf.if %20 {
        %28 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
        %29 = llvm.load %28 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
        %30 = llvm.mlir.addressof @str43 : !llvm.ptr<array<24 x i8>>
        %31 = llvm.getelementptr %30[%c0_i32, %c0_i32] : (!llvm.ptr<array<24 x i8>>, i32, i32) -> !llvm.ptr<i8>
        %32 = llvm.call @fprintf(%29, %31) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>) -> i32
        call @exit(%c0_i32) : (i32) -> ()
      }
      %21 = llvm.load %7 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
      %22 = llvm.mlir.addressof @str41 : !llvm.ptr<array<2 x i8>>
      %23 = llvm.getelementptr %22[%c0_i32, %c0_i32] : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
      %24 = llvm.call @fopen(%13, %23) : (!llvm.ptr<i8>, !llvm.ptr<i8>) -> !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
      llvm.store %24, %7 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
      %25 = llvm.icmp "ne" %24, %14 : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
      %26 = arith.xori %25, %true : i1
      scf.if %26 {
        %28 = llvm.mlir.addressof @str44 : !llvm.ptr<array<20 x i8>>
        %29 = llvm.getelementptr %28[%c0_i32, %c0_i32] : (!llvm.ptr<array<20 x i8>>, i32, i32) -> !llvm.ptr<i8>
        %30 = llvm.call @printf(%29) : (!llvm.ptr<i8>) -> i32
        call @exit(%c1_i32) : (i32) -> ()
      }
      scf.while (%arg3 = %true) : (i1) -> () {
        %28 = call @feof(%24) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32
        %29 = arith.cmpi eq, %28, %c0_i32 : i32
        %30 = arith.andi %29, %arg3 : i1
        scf.condition(%30)
      } do {
        %28 = llvm.getelementptr %3[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<array<53 x i8>>
        %29 = llvm.getelementptr %28[%c0_i32, %c0_i32] : (!llvm.ptr<array<53 x i8>>, i32, i32) -> !llvm.ptr<i8>
        %30 = llvm.call @fgets(%29, %c49_i32, %24) : (!llvm.ptr<i8>, i32, !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> !llvm.ptr<i8>
        %31 = call @fgetc(%24) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32
        %32 = call @feof(%24) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32
        %33 = arith.cmpi eq, %32, %c0_i32 : i32
        scf.if %33 {
          scf.for %arg3 = %c0 to %c5 step %c1 {
            %42 = arith.index_cast %arg3 : index to i32
            %43 = llvm.getelementptr %0[%c0_i32, %c0_i32] : (!llvm.ptr<array<6 x i8>>, i32, i32) -> !llvm.ptr<i8>
            %44 = arith.index_cast %arg3 : index to i64
            %45 = llvm.getelementptr %43[%44] : (!llvm.ptr<i8>, i64) -> !llvm.ptr<i8>
            %46 = llvm.getelementptr %29[%42] : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %47 = llvm.getelementptr %46[%c28_i32] : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %48 = llvm.load %47 : !llvm.ptr<i8>
            llvm.store %48, %45 : !llvm.ptr<i8>
          }
          %34 = llvm.getelementptr %0[%c0_i32, %c0_i32] : (!llvm.ptr<array<6 x i8>>, i32, i32) -> !llvm.ptr<i8>
          %35 = llvm.getelementptr %34[%c5_i64] : (!llvm.ptr<i8>, i64) -> !llvm.ptr<i8>
          llvm.store %c0_i8, %35 : !llvm.ptr<i8>
          %36 = call @atof(%34) : (!llvm.ptr<i8>) -> f64
          %37 = arith.truncf %36 : f64 to f32
          memref.store %37, %1[%c0, %c0] : memref<1x2xf32>
          scf.for %arg3 = %c0 to %c5 step %c1 {
            %42 = arith.index_cast %arg3 : index to i32
            %43 = arith.index_cast %arg3 : index to i64
            %44 = llvm.getelementptr %34[%43] : (!llvm.ptr<i8>, i64) -> !llvm.ptr<i8>
            %45 = llvm.getelementptr %29[%42] : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %46 = llvm.getelementptr %45[%c33_i32] : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %47 = llvm.load %46 : !llvm.ptr<i8>
            llvm.store %47, %44 : !llvm.ptr<i8>
          }
          llvm.store %c0_i8, %35 : !llvm.ptr<i8>
          %38 = call @atof(%34) : (!llvm.ptr<i8>) -> f64
          %39 = arith.truncf %38 : f64 to f32
          memref.store %39, %1[%c0, %c1] : memref<1x2xf32>
          call @_ZNSt6vectorI7latLongSaIS0_EE9push_backERKS0_(%arg2, %2) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, memref<?x2xf32>) -> ()
          call @_ZNSt6vectorI6recordSaIS0_EE9push_backERKS0_(%arg1, %3) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>) -> ()
          %40 = memref.load %4[%c0] : memref<1xi32>
          %41 = arith.addi %40, %c1_i32 : i32
          memref.store %41, %4[%c0] : memref<1xi32>
        }
        scf.yield %33 : i1
      }
      %27 = llvm.call @fclose(%24) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32
      scf.yield
    }
    %15 = llvm.call @fclose(%12) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32
    %16 = memref.load %4[%c0] : memref<1xi32>
    return %16 : i32
  }
  func private @cudaGetDeviceProperties(!llvm.ptr<struct<(array<256 x i8>, struct<(array<16 x i8>)>, array<8 x i8>, i32, i64, i64, i32, i32, i64, i32, array<3 x i32>, array<3 x i32>, i32, i64, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, array<2 x i32>, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, array<3 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, i32, array<2 x i32>, array<3 x i32>, array<2 x i32>, array<3 x i32>, i32, array<2 x i32>, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64)>>, i32) -> i32 attributes {llvm.linkage = #llvm.linkage<external>}
  func private @cudaThreadSynchronize() -> i32 attributes {llvm.linkage = #llvm.linkage<external>}
  func private @cudaMemGetInfo(memref<?xi64>, memref<?xi64>) -> i32 attributes {llvm.linkage = #llvm.linkage<external>}
  func private @exit(i32) attributes {llvm.linkage = #llvm.linkage<external>}
  func private @_ZN4dim3C1Ejjj(%arg0: memref<?x3xi32>, %arg1: i32, %arg2: i32, %arg3: i32) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %c1 = arith.constant 1 : index
    %c2 = arith.constant 2 : index
    memref.store %arg1, %arg0[%c0, %c0] : memref<?x3xi32>
    memref.store %arg2, %arg0[%c0, %c1] : memref<?x3xi32>
    memref.store %arg3, %arg0[%c0, %c2] : memref<?x3xi32>
    return
  }
  func @_ZNSt6vectorI7latLongSaIS0_EEixEm(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, %arg1: i64) -> memref<?x2xf32> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>
    %1 = llvm.getelementptr %0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>
    %2 = llvm.getelementptr %1[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    %3 = llvm.load %2 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %4 = llvm.getelementptr %3[%arg1] : (!llvm.ptr<struct<(f32, f32)>>, i64) -> !llvm.ptr<struct<(f32, f32)>>
    %5 = "polygeist.pointer2memref"(%4) : (!llvm.ptr<struct<(f32, f32)>>) -> memref<?x2xf32>
    return %5 : memref<?x2xf32>
  }
  func private @_ZN4dim3C1ERKS_(%arg0: memref<?x3xi32>, %arg1: memref<?x3xi32>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %c1 = arith.constant 1 : index
    %c2 = arith.constant 2 : index
    %0 = memref.load %arg1[%c0, %c0] : memref<?x3xi32>
    memref.store %0, %arg0[%c0, %c0] : memref<?x3xi32>
    %1 = memref.load %arg1[%c0, %c1] : memref<?x3xi32>
    memref.store %1, %arg0[%c0, %c1] : memref<?x3xi32>
    %2 = memref.load %arg1[%c0, %c2] : memref<?x3xi32>
    memref.store %2, %arg0[%c0, %c2] : memref<?x3xi32>
    return
  }
  func private @_ZN4dim3C1EOS_(%arg0: memref<?x3xi32>, %arg1: memref<?x3xi32>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %c1 = arith.constant 1 : index
    %c2 = arith.constant 2 : index
    %0 = memref.load %arg1[%c0, %c0] : memref<?x3xi32>
    memref.store %0, %arg0[%c0, %c0] : memref<?x3xi32>
    %1 = memref.load %arg1[%c0, %c1] : memref<?x3xi32>
    memref.store %1, %arg0[%c0, %c1] : memref<?x3xi32>
    %2 = memref.load %arg1[%c0, %c2] : memref<?x3xi32>
    memref.store %2, %arg0[%c0, %c2] : memref<?x3xi32>
    return
  }
  func private @_ZL21MY_WRITE_TIME_TO_FILEPKcS0_d(%arg0: !llvm.ptr<i8>, %arg1: !llvm.ptr<i8>, %arg2: f64) attributes {llvm.linkage = #llvm.linkage<internal>} {
    %c1_i64 = arith.constant 1 : i64
    %true = arith.constant true
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %false = arith.constant false
    %0 = llvm.alloca %c1_i64 x !llvm.ptr<i8> : (i64) -> !llvm.ptr<ptr<i8>>
    %1 = llvm.alloca %c1_i64 x !llvm.ptr<i8> : (i64) -> !llvm.ptr<ptr<i8>>
    %2 = llvm.alloca %c1_i64 x !llvm.array<1 x i8> : (i64) -> !llvm.ptr<array<1 x i8>>
    %3 = llvm.alloca %c1_i64 x !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>> : (i64) -> !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
    %4 = llvm.alloca %c1_i64 x !llvm.ptr<i8> : (i64) -> !llvm.ptr<ptr<i8>>
    %5 = llvm.load %4 : !llvm.ptr<ptr<i8>>
    %6 = llvm.mlir.addressof @str62 : !llvm.ptr<array<15 x i8>>
    %7 = llvm.getelementptr %6[%c0_i32, %c0_i32] : (!llvm.ptr<array<15 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %8 = llvm.call @getenv(%7) : (!llvm.ptr<i8>) -> !llvm.ptr<i8>
    llvm.store %8, %4 : !llvm.ptr<ptr<i8>>
    %9 = llvm.load %3 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
    %10 = llvm.mlir.null : !llvm.ptr<i8>
    %11 = llvm.icmp "eq" %8, %10 : !llvm.ptr<i8>
    %12 = scf.if %11 -> (i1) {
      scf.yield %true : i1
    } else {
      %38 = llvm.mlir.addressof @str14 : !llvm.ptr<array<1 x i8>>
      %39 = llvm.getelementptr %38[%c0_i32, %c0_i32] : (!llvm.ptr<array<1 x i8>>, i32, i32) -> !llvm.ptr<i8>
      %40 = llvm.call @strcmp(%8, %39) : (!llvm.ptr<i8>, !llvm.ptr<i8>) -> i32
      %41 = arith.cmpi eq, %40, %c0_i32 : i32
      scf.yield %41 : i1
    }
    %13 = scf.if %12 -> (i1) {
      scf.yield %true : i1
    } else {
      %38 = llvm.mlir.addressof @str63 : !llvm.ptr<array<2 x i8>>
      %39 = llvm.getelementptr %38[%c0_i32, %c0_i32] : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
      %40 = llvm.call @strcmp(%8, %39) : (!llvm.ptr<i8>, !llvm.ptr<i8>) -> i32
      %41 = arith.cmpi eq, %40, %c0_i32 : i32
      scf.yield %41 : i1
    }
    %14 = scf.if %13 -> (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) {
      %38 = llvm.mlir.addressof @stdout : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
      %39 = llvm.load %38 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
      llvm.store %39, %3 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
      scf.yield %39 : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
    } else {
      %38 = llvm.mlir.addressof @str64 : !llvm.ptr<array<2 x i8>>
      %39 = llvm.getelementptr %38[%c0_i32, %c0_i32] : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
      %40 = llvm.call @fopen(%8, %39) : (!llvm.ptr<i8>, !llvm.ptr<i8>) -> !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
      llvm.store %40, %3 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
      scf.yield %40 : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
    }
    %15 = llvm.mlir.null : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
    %16 = llvm.icmp "ne" %14, %15 : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
    %17 = arith.xori %16, %true : i1
    scf.if %17 {
      %38 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
      %39 = llvm.load %38 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
      %40 = llvm.mlir.addressof @str65 : !llvm.ptr<array<45 x i8>>
      %41 = llvm.getelementptr %40[%c0_i32, %c0_i32] : (!llvm.ptr<array<45 x i8>>, i32, i32) -> !llvm.ptr<i8>
      %42 = llvm.call @__errno_location() : () -> !llvm.ptr<i32>
      %43 = llvm.load %42 : !llvm.ptr<i32>
      %44 = llvm.call @__errno_location() : () -> !llvm.ptr<i32>
      %45 = llvm.load %44 : !llvm.ptr<i32>
      %46 = call @strerror(%45) : (i32) -> !llvm.ptr<i8>
      %47 = llvm.call @fprintf(%39, %41, %8, %43, %46) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, !llvm.ptr<i8>, i32, !llvm.ptr<i8>) -> i32
      call @exit(%c1_i32) : (i32) -> ()
    }
    %18 = llvm.mlir.addressof @str14 : !llvm.ptr<array<1 x i8>>
    %19 = llvm.load %18 : !llvm.ptr<array<1 x i8>>
    llvm.store %19, %2 : !llvm.ptr<array<1 x i8>>
    %20 = llvm.load %1 : !llvm.ptr<ptr<i8>>
    %21 = llvm.mlir.addressof @str66 : !llvm.ptr<array<9 x i8>>
    %22 = llvm.getelementptr %21[%c0_i32, %c0_i32] : (!llvm.ptr<array<9 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %23 = llvm.call @getenv(%22) : (!llvm.ptr<i8>) -> !llvm.ptr<i8>
    llvm.store %23, %1 : !llvm.ptr<ptr<i8>>
    %24 = llvm.icmp "ne" %23, %10 : !llvm.ptr<i8>
    %25 = arith.xori %24, %true : i1
    %26 = scf.if %25 -> (!llvm.ptr<i8>) {
      %38 = llvm.getelementptr %2[%c0_i32, %c0_i32] : (!llvm.ptr<array<1 x i8>>, i32, i32) -> !llvm.ptr<i8>
      llvm.store %38, %1 : !llvm.ptr<ptr<i8>>
      scf.yield %38 : !llvm.ptr<i8>
    } else {
      scf.yield %23 : !llvm.ptr<i8>
    }
    %27 = call @omp_get_max_threads() : () -> i32
    %28 = llvm.load %0 : !llvm.ptr<ptr<i8>>
    %29 = llvm.mlir.addressof @str67 : !llvm.ptr<array<10 x i8>>
    %30 = llvm.getelementptr %29[%c0_i32, %c0_i32] : (!llvm.ptr<array<10 x i8>>, i32, i32) -> !llvm.ptr<i8>
    llvm.store %30, %0 : !llvm.ptr<ptr<i8>>
    %31 = llvm.mlir.addressof @str68 : !llvm.ptr<array<28 x i8>>
    %32 = llvm.getelementptr %31[%c0_i32, %c0_i32] : (!llvm.ptr<array<28 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %33 = llvm.call @fprintf(%14, %32, %arg0, %arg1, %arg2, %26, %30, %27) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>, f64, !llvm.ptr<i8>, !llvm.ptr<i8>, i32) -> i32
    %34 = llvm.mlir.addressof @stdout : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
    %35 = llvm.load %34 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
    %36 = llvm.icmp "ne" %14, %35 : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
    %37 = scf.if %36 -> (i1) {
      %38 = llvm.mlir.addressof @stderr : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
      %39 = llvm.load %38 : !llvm.ptr<ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>>
      %40 = llvm.icmp "ne" %14, %39 : !llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>
      scf.yield %40 : i1
    } else {
      scf.yield %false : i1
    }
    scf.if %37 {
      %38 = llvm.call @fclose(%14) : (!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32
    }
    return
  }
  func private @strerror(i32) -> !llvm.ptr<i8> attributes {llvm.linkage = #llvm.linkage<external>}
  func @_Z10findLowestRSt6vectorI6recordSaIS0_EEPfii(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, %arg1: memref<?xf32>, %arg2: i32, %arg3: i32) attributes {llvm.linkage = #llvm.linkage<external>} {
    %c1_i64 = arith.constant 1 : i64
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c0 = arith.constant 0 : index
    %c1 = arith.constant 1 : index
    %0 = llvm.alloca %c1_i64 x !llvm.ptr<struct<(array<53 x i8>, f32)>> : (i64) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %1 = arith.index_cast %arg3 : i32 to index
    scf.for %arg4 = %c0 to %1 step %c1 {
      %2 = arith.index_cast %arg4 : index to i32
      %3 = arith.index_cast %arg2 : i32 to index
      %4:2 = scf.for %arg5 = %arg4 to %3 step %c1 iter_args(%arg6 = %2, %arg7 = %2) -> (i32, i32) {
        %20 = arith.subi %arg5, %arg4 : index
        %21 = arith.index_cast %20 : index to i32
        %22 = arith.addi %21, %2 : i32
        %23 = arith.index_cast %22 : i32 to index
        %24 = memref.load %arg1[%23] : memref<?xf32>
        %25 = arith.index_cast %arg6 : i32 to index
        %26 = memref.load %arg1[%25] : memref<?xf32>
        %27 = arith.cmpf ult, %24, %26 : f32
        %28 = select %27, %22, %arg6 : i32
        scf.yield %28, %28 : i32, i32
      }
      %5 = llvm.load %0 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
      %6 = arith.extsi %2 : i32 to i64
      %7 = call @_ZNSt6vectorI6recordSaIS0_EEixEm(%arg0, %6) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
      llvm.store %7, %0 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
      %8 = call @_ZNSt6vectorI6recordSaIS0_EEixEm(%arg0, %6) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
      %9 = arith.extsi %4#1 : i32 to i64
      %10 = call @_ZNSt6vectorI6recordSaIS0_EEixEm(%arg0, %9) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
      %11 = call @_ZN6recordaSERKS_(%8, %10) : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
      %12 = call @_ZNSt6vectorI6recordSaIS0_EEixEm(%arg0, %9) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
      %13 = call @_ZN6recordaSERKS_(%12, %7) : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
      %14 = memref.load %arg1[%arg4] : memref<?xf32>
      %15 = arith.index_cast %4#1 : i32 to index
      %16 = memref.load %arg1[%15] : memref<?xf32>
      memref.store %16, %arg1[%arg4] : memref<?xf32>
      memref.store %14, %arg1[%15] : memref<?xf32>
      %17 = call @_ZNSt6vectorI6recordSaIS0_EEixEm(%arg0, %6) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
      %18 = llvm.getelementptr %17[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<f32>
      %19 = memref.load %arg1[%arg4] : memref<?xf32>
      llvm.store %19, %18 : !llvm.ptr<f32>
    }
    return
  }
  func @_ZNSt6vectorI6recordSaIS0_EEixEm(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, %arg1: i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>
    %1 = llvm.getelementptr %0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>
    %2 = llvm.getelementptr %1[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %3 = llvm.load %2 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %4 = llvm.getelementptr %3[%arg1] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
    return %4 : !llvm.ptr<struct<(array<53 x i8>, f32)>>
  }
  func private @feof(!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32 attributes {llvm.linkage = #llvm.linkage<external>}
  func private @fgetc(!llvm.ptr<struct<(i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", (ptr<struct<"struct._IO_marker">>, ptr<struct<"struct._IO_FILE">>, i32, array<4 x i8>)>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32 attributes {llvm.linkage = #llvm.linkage<external>}
  func private @atof(!llvm.ptr<i8>) -> f64 attributes {llvm.linkage = #llvm.linkage<external>}
  func @_ZNSt6vectorI7latLongSaIS0_EE9push_backERKS0_(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, %arg1: memref<?x2xf32>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c2_i32 = arith.constant 2 : i32
    %c1_i64 = arith.constant 1 : i64
    %c0 = arith.constant 0 : index
    %0 = memref.alloca() : memref<1x1xmemref<?x2xf32>>
    %1 = memref.alloca() : memref<1x1xmemref<?x2xf32>>
    %2 = memref.alloca() : memref<1x1xmemref<?x2xf32>>
    %3 = memref.cast %2 : memref<1x1xmemref<?x2xf32>> to memref<?x1xmemref<?x2xf32>>
    %4 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>
    %5 = llvm.getelementptr %4[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>
    %6 = llvm.getelementptr %5[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    %7 = llvm.load %6 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %8 = llvm.getelementptr %5[%c0_i32, %c2_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    %9 = llvm.load %8 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %10 = llvm.icmp "ne" %7, %9 : !llvm.ptr<struct<(f32, f32)>>
    scf.if %10 {
      %11 = llvm.bitcast %5 : !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>> to !llvm.ptr<struct<(i8)>>
      %12 = llvm.load %6 : !llvm.ptr<ptr<struct<(f32, f32)>>>
      %13 = "polygeist.pointer2memref"(%12) : (!llvm.ptr<struct<(f32, f32)>>) -> memref<?x2xf32>
      call @_ZNSt16allocator_traitsISaI7latLongEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%11, %13, %arg1) : (!llvm.ptr<struct<(i8)>>, memref<?x2xf32>, memref<?x2xf32>) -> ()
      %14 = llvm.load %6 : !llvm.ptr<ptr<struct<(f32, f32)>>>
      %15 = llvm.getelementptr %14[%c1_i64] : (!llvm.ptr<struct<(f32, f32)>>, i64) -> !llvm.ptr<struct<(f32, f32)>>
      llvm.store %15, %6 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    } else {
      %11 = memref.cast %1 : memref<1x1xmemref<?x2xf32>> to memref<?x1xmemref<?x2xf32>>
      call @_ZNSt6vectorI7latLongSaIS0_EE3endEv(%arg0, %11) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, memref<?x1xmemref<?x2xf32>>) -> ()
      call @_ZN9__gnu_cxx17__normal_iteratorIP7latLongSt6vectorIS1_SaIS1_EEEC1EOS6_(%3, %11) : (memref<?x1xmemref<?x2xf32>>, memref<?x1xmemref<?x2xf32>>) -> ()
      %12 = memref.load %2[%c0, %c0] : memref<1x1xmemref<?x2xf32>>
      memref.store %12, %0[%c0, %c0] : memref<1x1xmemref<?x2xf32>>
      %13 = memref.cast %0 : memref<1x1xmemref<?x2xf32>> to memref<?x1xmemref<?x2xf32>>
      call @_ZNSt6vectorI7latLongSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_(%arg0, %13, %arg1) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, memref<?x1xmemref<?x2xf32>>, memref<?x2xf32>) -> ()
    }
    return
  }
  func @_ZNSt6vectorI6recordSaIS0_EE9push_backERKS0_(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, %arg1: !llvm.ptr<struct<(array<53 x i8>, f32)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c1_i64 = arith.constant 1 : i64
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c2_i32 = arith.constant 2 : i32
    %0 = llvm.alloca %c1_i64 x !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> : (i64) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    %1 = llvm.alloca %c1_i64 x !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> : (i64) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    %2 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>
    %3 = llvm.getelementptr %2[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>
    %4 = llvm.getelementptr %3[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %5 = llvm.load %4 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %6 = llvm.getelementptr %3[%c0_i32, %c2_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %7 = llvm.load %6 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %8 = llvm.icmp "ne" %5, %7 : !llvm.ptr<struct<(array<53 x i8>, f32)>>
    scf.if %8 {
      %9 = llvm.bitcast %3 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>> to !llvm.ptr<struct<(i8)>>
      %10 = llvm.load %4 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
      call @_ZNSt16allocator_traitsISaI6recordEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%9, %10, %arg1) : (!llvm.ptr<struct<(i8)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>) -> ()
      %11 = llvm.load %4 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
      %12 = llvm.getelementptr %11[%c1_i64] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
      llvm.store %12, %4 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    } else {
      %9 = call @_ZNSt6vectorI6recordSaIS0_EE3endEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)>
      llvm.store %9, %0 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
      call @_ZN9__gnu_cxx17__normal_iteratorIP6recordSt6vectorIS1_SaIS1_EEEC1EOS6_(%1, %0) : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>) -> ()
      %10 = llvm.load %1 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
      call @_ZNSt6vectorI6recordSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_(%arg0, %10, %arg1) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)>, !llvm.ptr<struct<(array<53 x i8>, f32)>>) -> ()
    }
    return
  }
  func private @_ZN6recordaSERKS_(%arg0: !llvm.ptr<struct<(array<53 x i8>, f32)>>, %arg1: !llvm.ptr<struct<(array<53 x i8>, f32)>>) -> !llvm.ptr<struct<(array<53 x i8>, f32)>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %c53_i64 = arith.constant 53 : i64
    %false = arith.constant false
    %c1_i32 = arith.constant 1 : i32
    %0 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<array<53 x i8>>
    %1 = llvm.bitcast %0 : !llvm.ptr<array<53 x i8>> to !llvm.ptr<i8>
    %2 = llvm.getelementptr %arg1[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<array<53 x i8>>
    %3 = llvm.bitcast %2 : !llvm.ptr<array<53 x i8>> to !llvm.ptr<i8>
    "llvm.intr.memcpy"(%1, %3, %c53_i64, %false) : (!llvm.ptr<i8>, !llvm.ptr<i8>, i64, i1) -> ()
    %4 = llvm.getelementptr %arg0[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<f32>
    %5 = llvm.getelementptr %arg1[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<f32>
    %6 = llvm.load %5 : !llvm.ptr<f32>
    llvm.store %6, %4 : !llvm.ptr<f32>
    return %arg0 : !llvm.ptr<struct<(array<53 x i8>, f32)>>
  }
  func private @strncpy(!llvm.ptr<i8>, !llvm.ptr<i8>, i64) -> !llvm.ptr<i8> attributes {llvm.linkage = #llvm.linkage<external>}
  func @_ZNSt12_Vector_baseI6recordSaIS0_EEC1Ev(%arg0: !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>
    call @_ZNSt12_Vector_baseI6recordSaIS0_EE12_Vector_implC1Ev(%0) : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>) -> ()
    return
  }
  func @_ZNSt12_Vector_baseI7latLongSaIS0_EEC1Ev(%arg0: !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>
    call @_ZNSt12_Vector_baseI7latLongSaIS0_EE12_Vector_implC1Ev(%0) : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>) -> ()
    return
  }
  func private @omp_get_max_threads() -> i32 attributes {llvm.linkage = #llvm.linkage<external>}
  func @_ZNSt16allocator_traitsISaI7latLongEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: memref<?x2xf32>, %arg2: memref<?x2xf32>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    return
  }
  func @_ZNSt6vectorI7latLongSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, %arg1: memref<?x1xmemref<?x2xf32>>, %arg2: memref<?x2xf32>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c1_i64 = arith.constant 1 : i64
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c2_i32 = arith.constant 2 : i32
    %0 = memref.alloca() : memref<1x1xmemref<?x2xf32>>
    %1 = llvm.mlir.addressof @str69 : !llvm.ptr<array<26 x i8>>
    %2 = llvm.getelementptr %1[%c0_i32, %c0_i32] : (!llvm.ptr<array<26 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %3 = call @_ZNKSt6vectorI7latLongSaIS0_EE12_M_check_lenEmPKc(%arg0, %c1_i64, %2) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, i64, !llvm.ptr<i8>) -> i64
    %4 = memref.cast %0 : memref<1x1xmemref<?x2xf32>> to memref<?x1xmemref<?x2xf32>>
    call @_ZNSt6vectorI7latLongSaIS0_EE5beginEv(%arg0, %4) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, memref<?x1xmemref<?x2xf32>>) -> ()
    %5 = call @_ZN9__gnu_cxxmiIP7latLongSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%arg1, %4) : (memref<?x1xmemref<?x2xf32>>, memref<?x1xmemref<?x2xf32>>) -> i64
    %6 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>
    %7 = call @_ZNSt12_Vector_baseI7latLongSaIS0_EE11_M_allocateEm(%6, %3) : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, i64) -> memref<?x2xf32>
    %8 = llvm.getelementptr %6[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>
    %9 = llvm.getelementptr %8[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    %10 = llvm.load %9 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %11 = llvm.getelementptr %8[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    %12 = llvm.load %11 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %13 = call @_ZNSt12_Vector_baseI7latLongSaIS0_EE19_M_get_Tp_allocatorEv(%6) : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>) -> !llvm.ptr<struct<(i8)>>
    %14 = "polygeist.pointer2memref"(%10) : (!llvm.ptr<struct<(f32, f32)>>) -> memref<?x2xf32>
    %15 = "polygeist.pointer2memref"(%12) : (!llvm.ptr<struct<(f32, f32)>>) -> memref<?x2xf32>
    call @_ZSt8_DestroyIP7latLongS0_EvT_S2_RSaIT0_E(%14, %15, %13) : (memref<?x2xf32>, memref<?x2xf32>, !llvm.ptr<struct<(i8)>>) -> ()
    %16 = llvm.load %9 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %17 = llvm.getelementptr %8[%c0_i32, %c2_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    %18 = llvm.load %17 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %19 = llvm.load %9 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %20 = llvm.ptrtoint %19 : !llvm.ptr<struct<(f32, f32)>> to i64
    %21 = llvm.ptrtoint %18 : !llvm.ptr<struct<(f32, f32)>> to i64
    %22 = arith.subi %21, %20 : i64
    %23 = "polygeist.pointer2memref"(%16) : (!llvm.ptr<struct<(f32, f32)>>) -> memref<?x2xf32>
    call @_ZNSt12_Vector_baseI7latLongSaIS0_EE13_M_deallocateEPS0_m(%6, %23, %22) : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, memref<?x2xf32>, i64) -> ()
    return
  }
  func private @_ZN9__gnu_cxx17__normal_iteratorIP7latLongSt6vectorIS1_SaIS1_EEEC1EOS6_(%arg0: memref<?x1xmemref<?x2xf32>>, %arg1: memref<?x1xmemref<?x2xf32>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %0 = memref.load %arg1[%c0, %c0] : memref<?x1xmemref<?x2xf32>>
    memref.store %0, %arg0[%c0, %c0] : memref<?x1xmemref<?x2xf32>>
    return
  }
  func @_ZNSt6vectorI7latLongSaIS0_EE3endEv(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, %arg1: memref<?x1xmemref<?x2xf32>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %0 = memref.alloca() : memref<1x1xmemref<?x2xf32>>
    %1 = memref.alloca() : memref<1x1xmemref<?x2xf32>>
    %2 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>
    %3 = llvm.getelementptr %2[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>
    %4 = llvm.getelementptr %3[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    %5 = llvm.bitcast %4 : !llvm.ptr<ptr<struct<(f32, f32)>>> to !llvm.ptr<memref<?x2xf32>>
    %6 = llvm.getelementptr %5[%c0_i32] : (!llvm.ptr<memref<?x2xf32>>, i32) -> !llvm.ptr<memref<?x2xf32>>
    %7 = llvm.load %6 : !llvm.ptr<memref<?x2xf32>>
    memref.store %7, %0[%c0, %c0] : memref<1x1xmemref<?x2xf32>>
    %8 = memref.load %0[%c0, %c0] : memref<1x1xmemref<?x2xf32>>
    memref.store %8, %1[%c0, %c0] : memref<1x1xmemref<?x2xf32>>
    %9 = memref.load %1[%c0, %c0] : memref<1x1xmemref<?x2xf32>>
    memref.store %9, %arg1[%c0, %c0] : memref<?x1xmemref<?x2xf32>>
    return
  }
  func @_ZNSt16allocator_traitsISaI6recordEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: !llvm.ptr<struct<(array<53 x i8>, f32)>>, %arg2: !llvm.ptr<struct<(array<53 x i8>, f32)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(i8)>> to !llvm.ptr<struct<(i8)>>
    %1 = call @_ZSt7forwardIRK6recordEOT_RNSt16remove_referenceIS3_E4typeE(%arg2) : (!llvm.ptr<struct<(array<53 x i8>, f32)>>) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
    call @_ZN9__gnu_cxx13new_allocatorI6recordE9constructIS1_JRKS1_EEEvPT_DpOT0_(%0, %arg1, %1) : (!llvm.ptr<struct<(i8)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>) -> ()
    return
  }
  func @_ZNSt6vectorI6recordSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, %arg1: !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)>, %arg2: !llvm.ptr<struct<(array<53 x i8>, f32)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c1_i64 = arith.constant 1 : i64
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c2_i32 = arith.constant 2 : i32
    %0 = llvm.alloca %c1_i64 x !llvm.ptr<struct<(array<53 x i8>, f32)>> : (i64) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %1 = llvm.alloca %c1_i64 x !llvm.ptr<struct<(array<53 x i8>, f32)>> : (i64) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %2 = llvm.alloca %c1_i64 x !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> : (i64) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    %3 = llvm.alloca %c1_i64 x !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> : (i64) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    llvm.store %arg1, %3 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    %4 = llvm.mlir.addressof @str69 : !llvm.ptr<array<26 x i8>>
    %5 = llvm.getelementptr %4[%c0_i32, %c0_i32] : (!llvm.ptr<array<26 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %6 = call @_ZNKSt6vectorI6recordSaIS0_EE12_M_check_lenEmPKc(%arg0, %c1_i64, %5) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, i64, !llvm.ptr<i8>) -> i64
    %7 = call @_ZNSt6vectorI6recordSaIS0_EE5beginEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)>
    llvm.store %7, %2 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    %8 = call @_ZN9__gnu_cxxmiIP6recordSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%3, %2) : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>) -> i64
    %9 = llvm.load %1 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %10 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>
    %11 = call @_ZNSt12_Vector_baseI6recordSaIS0_EE11_M_allocateEm(%10, %6) : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
    llvm.store %11, %1 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %12 = llvm.load %0 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    llvm.store %11, %0 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %13 = llvm.getelementptr %10[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>
    %14 = llvm.getelementptr %13[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %15 = llvm.load %14 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %16 = llvm.getelementptr %13[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %17 = llvm.load %16 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %18 = call @_ZNSt12_Vector_baseI6recordSaIS0_EE19_M_get_Tp_allocatorEv(%10) : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>) -> !llvm.ptr<struct<(i8)>>
    call @_ZSt8_DestroyIP6recordS0_EvT_S2_RSaIT0_E(%15, %17, %18) : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>, !llvm.ptr<struct<(i8)>>) -> ()
    %19 = llvm.load %14 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %20 = llvm.getelementptr %13[%c0_i32, %c2_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %21 = llvm.load %20 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %22 = llvm.load %14 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %23 = llvm.ptrtoint %22 : !llvm.ptr<struct<(array<53 x i8>, f32)>> to i64
    %24 = llvm.ptrtoint %21 : !llvm.ptr<struct<(array<53 x i8>, f32)>> to i64
    %25 = arith.subi %24, %23 : i64
    call @_ZNSt12_Vector_baseI6recordSaIS0_EE13_M_deallocateEPS0_m(%10, %19, %25) : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>, i64) -> ()
    llvm.store %11, %14 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    llvm.store %11, %16 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %26 = llvm.getelementptr %11[%6] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
    llvm.store %26, %20 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    return
  }
  func private @_ZN9__gnu_cxx17__normal_iteratorIP6recordSt6vectorIS1_SaIS1_EEEC1EOS6_(%arg0: !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, %arg1: !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.getelementptr %arg1[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %1 = llvm.load %0 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %2 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    llvm.store %1, %2 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    return
  }
  func @_ZNSt6vectorI6recordSaIS0_EE3endEv(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c1_i64 = arith.constant 1 : i64
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %0 = llvm.alloca %c1_i64 x !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> : (i64) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    %1 = llvm.alloca %c1_i64 x !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> : (i64) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    %2 = llvm.alloca %c1_i64 x !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> : (i64) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    %3 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>
    %4 = llvm.getelementptr %3[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>
    %5 = llvm.getelementptr %4[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    call @_ZN9__gnu_cxx17__normal_iteratorIP6recordSt6vectorIS1_SaIS1_EEEC1ERKS2_(%1, %5) : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>) -> ()
    %6 = llvm.load %1 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    llvm.store %6, %0 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    call @_ZN9__gnu_cxx17__normal_iteratorIP6recordSt6vectorIS1_SaIS1_EEEC1EOS6_(%2, %0) : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>) -> ()
    %7 = llvm.load %2 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    return %7 : !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)>
  }
  func @_ZNSt12_Vector_baseI6recordSaIS0_EE12_Vector_implC1Ev(%arg0: !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c2_i32 = arith.constant 2 : i32
    %0 = llvm.mlir.null : !llvm.ptr<struct<(array<53 x i8>, f32)>>
    %1 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    llvm.store %0, %1 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %2 = llvm.getelementptr %arg0[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    llvm.store %0, %2 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %3 = llvm.getelementptr %arg0[%c0_i32, %c2_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    llvm.store %0, %3 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    return
  }
  func @_ZNSt12_Vector_baseI7latLongSaIS0_EE12_Vector_implC1Ev(%arg0: !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c2_i32 = arith.constant 2 : i32
    %0 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    %1 = llvm.mlir.null : !llvm.ptr<struct<(f32, f32)>>
    llvm.store %1, %0 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %2 = llvm.getelementptr %arg0[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    llvm.store %1, %2 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %3 = llvm.getelementptr %arg0[%c0_i32, %c2_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    llvm.store %1, %3 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    return
  }
  func @_ZN9__gnu_cxx13new_allocatorI7latLongE9constructIS1_JRKS1_EEEvPT_DpOT0_(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: memref<?x2xf32>, %arg2: memref<?x2xf32>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    return
  }
  func private @_ZSt7forwardIRK7latLongEOT_RNSt16remove_referenceIS3_E4typeE(memref<?x2xf32>) -> memref<?x2xf32> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>}
  func @_ZNKSt6vectorI7latLongSaIS0_EE12_M_check_lenEmPKc(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, %arg1: i64, %arg2: !llvm.ptr<i8>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %true = arith.constant true
    %0 = llvm.mlir.undef : i64
    %1 = memref.alloca() : memref<1xi64>
    %2 = memref.cast %1 : memref<1xi64> to memref<?xi64>
    memref.store %0, %1[%c0] : memref<1xi64>
    %3 = memref.alloca() : memref<1xi64>
    %4 = memref.cast %3 : memref<1xi64> to memref<?xi64>
    memref.store %0, %3[%c0] : memref<1xi64>
    memref.store %arg1, %3[%c0] : memref<1xi64>
    %5 = call @_ZNKSt6vectorI7latLongSaIS0_EE8max_sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> i64
    %6 = call @_ZNKSt6vectorI7latLongSaIS0_EE4sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> i64
    %7 = arith.subi %5, %6 : i64
    %8 = memref.load %3[%c0] : memref<1xi64>
    %9 = arith.cmpi ult, %7, %8 : i64
    scf.if %9 {
      call @_ZSt20__throw_length_errorPKc(%arg2) : (!llvm.ptr<i8>) -> ()
    }
    %10 = call @_ZNKSt6vectorI7latLongSaIS0_EE4sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> i64
    %11 = call @_ZNKSt6vectorI7latLongSaIS0_EE4sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> i64
    memref.store %11, %1[%c0] : memref<1xi64>
    %12 = call @_ZSt3maxImERKT_S2_S2_(%2, %4) : (memref<?xi64>, memref<?xi64>) -> memref<?xi64>
    %13 = memref.load %12[%c0] : memref<?xi64>
    %14 = arith.addi %10, %13 : i64
    %15 = call @_ZNKSt6vectorI7latLongSaIS0_EE4sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> i64
    %16 = arith.cmpi slt, %14, %15 : i64
    %17 = scf.if %16 -> (i1) {
      scf.yield %true : i1
    } else {
      %19 = call @_ZNKSt6vectorI7latLongSaIS0_EE8max_sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> i64
      %20 = arith.cmpi sgt, %14, %19 : i64
      scf.yield %20 : i1
    }
    %18 = scf.if %17 -> (i64) {
      %19 = call @_ZNKSt6vectorI7latLongSaIS0_EE8max_sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> i64
      scf.yield %19 : i64
    } else {
      scf.yield %14 : i64
    }
    return %18 : i64
  }
  func @_ZN9__gnu_cxxmiIP7latLongSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%arg0: memref<?x1xmemref<?x2xf32>>, %arg1: memref<?x1xmemref<?x2xf32>>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %0 = call @_ZNK9__gnu_cxx17__normal_iteratorIP7latLongSt6vectorIS1_SaIS1_EEE4baseEv(%arg0) : (memref<?x1xmemref<?x2xf32>>) -> memref<?xmemref<?x2xf32>>
    %1 = memref.load %0[%c0] : memref<?xmemref<?x2xf32>>
    %2 = call @_ZNK9__gnu_cxx17__normal_iteratorIP7latLongSt6vectorIS1_SaIS1_EEE4baseEv(%arg1) : (memref<?x1xmemref<?x2xf32>>) -> memref<?xmemref<?x2xf32>>
    %3 = memref.load %2[%c0] : memref<?xmemref<?x2xf32>>
    %4 = "polygeist.memref2pointer"(%1) : (memref<?x2xf32>) -> !llvm.ptr<f32>
    %5 = "polygeist.memref2pointer"(%3) : (memref<?x2xf32>) -> !llvm.ptr<f32>
    %6 = llvm.ptrtoint %5 : !llvm.ptr<f32> to i64
    %7 = llvm.ptrtoint %4 : !llvm.ptr<f32> to i64
    %8 = arith.subi %7, %6 : i64
    return %8 : i64
  }
  func @_ZNSt6vectorI7latLongSaIS0_EE5beginEv(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>, %arg1: memref<?x1xmemref<?x2xf32>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %0 = memref.alloca() : memref<1x1xmemref<?x2xf32>>
    %1 = memref.cast %0 : memref<1x1xmemref<?x2xf32>> to memref<?x1xmemref<?x2xf32>>
    %2 = memref.alloca() : memref<1x1xmemref<?x2xf32>>
    %3 = memref.cast %2 : memref<1x1xmemref<?x2xf32>> to memref<?x1xmemref<?x2xf32>>
    %4 = "polygeist.pointer2memref"(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> memref<?xmemref<?x2xf32>>
    call @_ZN9__gnu_cxx17__normal_iteratorIP7latLongSt6vectorIS1_SaIS1_EEEC1ERKS2_(%1, %4) : (memref<?x1xmemref<?x2xf32>>, memref<?xmemref<?x2xf32>>) -> ()
    call @_ZN9__gnu_cxx17__normal_iteratorIP7latLongSt6vectorIS1_SaIS1_EEEC1EOS6_(%3, %1) : (memref<?x1xmemref<?x2xf32>>, memref<?x1xmemref<?x2xf32>>) -> ()
    %5 = memref.load %2[%c0, %c0] : memref<1x1xmemref<?x2xf32>>
    memref.store %5, %arg1[%c0, %c0] : memref<?x1xmemref<?x2xf32>>
    return
  }
  func @_ZNSt12_Vector_baseI7latLongSaIS0_EE11_M_allocateEm(%arg0: !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, %arg1: i64) -> memref<?x2xf32> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i64 = arith.constant 0 : i64
    %c0_i32 = arith.constant 0 : i32
    %0 = arith.cmpi ne, %arg1, %c0_i64 : i64
    %1 = scf.if %0 -> (memref<?x2xf32>) {
      %2 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>
      %3 = llvm.bitcast %2 : !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>> to !llvm.ptr<struct<(i8)>>
      %4 = call @_ZNSt16allocator_traitsISaI7latLongEE8allocateERS1_m(%3, %arg1) : (!llvm.ptr<struct<(i8)>>, i64) -> memref<?x2xf32>
      scf.yield %4 : memref<?x2xf32>
    } else {
      %2 = llvm.mlir.null : !llvm.ptr<i8>
      %3 = "polygeist.pointer2memref"(%2) : (!llvm.ptr<i8>) -> memref<?x2xf32>
      scf.yield %3 : memref<?x2xf32>
    }
    return %1 : memref<?x2xf32>
  }
  func @_ZSt8_DestroyIP7latLongS0_EvT_S2_RSaIT0_E(%arg0: memref<?x2xf32>, %arg1: memref<?x2xf32>, %arg2: !llvm.ptr<struct<(i8)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    call @_ZSt8_DestroyIP7latLongEvT_S2_(%arg0, %arg1) : (memref<?x2xf32>, memref<?x2xf32>) -> ()
    return
  }
  func @_ZNSt12_Vector_baseI7latLongSaIS0_EE19_M_get_Tp_allocatorEv(%arg0: !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>) -> !llvm.ptr<struct<(i8)>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>
    %1 = llvm.bitcast %0 : !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>> to !llvm.ptr<struct<(i8)>>
    return %1 : !llvm.ptr<struct<(i8)>>
  }
  func @_ZNSt12_Vector_baseI7latLongSaIS0_EE13_M_deallocateEPS0_m(%arg0: !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, %arg1: memref<?x2xf32>, %arg2: i64) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = "polygeist.memref2pointer"(%arg1) : (memref<?x2xf32>) -> !llvm.ptr<f32>
    %1 = llvm.mlir.null : !llvm.ptr<f32>
    %2 = llvm.icmp "ne" %0, %1 : !llvm.ptr<f32>
    scf.if %2 {
      %3 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>
      %4 = llvm.bitcast %3 : !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>> to !llvm.ptr<struct<(i8)>>
      call @_ZNSt16allocator_traitsISaI7latLongEE10deallocateERS1_PS0_m(%4, %arg1, %arg2) : (!llvm.ptr<struct<(i8)>>, memref<?x2xf32>, i64) -> ()
    }
    return
  }
  func @_ZN9__gnu_cxx17__normal_iteratorIP7latLongSt6vectorIS1_SaIS1_EEEC1ERKS2_(%arg0: memref<?x1xmemref<?x2xf32>>, %arg1: memref<?xmemref<?x2xf32>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %0 = memref.load %arg1[%c0] : memref<?xmemref<?x2xf32>>
    memref.store %0, %arg0[%c0, %c0] : memref<?x1xmemref<?x2xf32>>
    return
  }
  func @_ZN9__gnu_cxx13new_allocatorI6recordE9constructIS1_JRKS1_EEEvPT_DpOT0_(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: !llvm.ptr<struct<(array<53 x i8>, f32)>>, %arg2: !llvm.ptr<struct<(array<53 x i8>, f32)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c60_i64 = arith.constant 60 : i64
    %0 = llvm.call @malloc(%c60_i64) : (i64) -> !llvm.ptr<i8>
    %1 = llvm.bitcast %0 : !llvm.ptr<i8> to !llvm.ptr<struct<(array<53 x i8>, f32)>>
    %2 = call @_ZSt7forwardIRK6recordEOT_RNSt16remove_referenceIS3_E4typeE(%arg2) : (!llvm.ptr<struct<(array<53 x i8>, f32)>>) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
    call @_ZN6recordC1ERKS_(%1, %2) : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>) -> ()
    return
  }
  func private @_ZSt7forwardIRK6recordEOT_RNSt16remove_referenceIS3_E4typeE(%arg0: !llvm.ptr<struct<(array<53 x i8>, f32)>>) -> !llvm.ptr<struct<(array<53 x i8>, f32)>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    return %arg0 : !llvm.ptr<struct<(array<53 x i8>, f32)>>
  }
  func @_ZNKSt6vectorI6recordSaIS0_EE12_M_check_lenEmPKc(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>, %arg1: i64, %arg2: !llvm.ptr<i8>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %true = arith.constant true
    %0 = llvm.mlir.undef : i64
    %1 = memref.alloca() : memref<1xi64>
    %2 = memref.cast %1 : memref<1xi64> to memref<?xi64>
    memref.store %0, %1[%c0] : memref<1xi64>
    %3 = memref.alloca() : memref<1xi64>
    %4 = memref.cast %3 : memref<1xi64> to memref<?xi64>
    memref.store %0, %3[%c0] : memref<1xi64>
    memref.store %arg1, %3[%c0] : memref<1xi64>
    %5 = call @_ZNKSt6vectorI6recordSaIS0_EE8max_sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> i64
    %6 = call @_ZNKSt6vectorI6recordSaIS0_EE4sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> i64
    %7 = arith.subi %5, %6 : i64
    %8 = memref.load %3[%c0] : memref<1xi64>
    %9 = arith.cmpi ult, %7, %8 : i64
    scf.if %9 {
      call @_ZSt20__throw_length_errorPKc(%arg2) : (!llvm.ptr<i8>) -> ()
    }
    %10 = call @_ZNKSt6vectorI6recordSaIS0_EE4sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> i64
    %11 = call @_ZNKSt6vectorI6recordSaIS0_EE4sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> i64
    memref.store %11, %1[%c0] : memref<1xi64>
    %12 = call @_ZSt3maxImERKT_S2_S2_(%2, %4) : (memref<?xi64>, memref<?xi64>) -> memref<?xi64>
    %13 = memref.load %12[%c0] : memref<?xi64>
    %14 = arith.addi %10, %13 : i64
    %15 = call @_ZNKSt6vectorI6recordSaIS0_EE4sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> i64
    %16 = arith.cmpi slt, %14, %15 : i64
    %17 = scf.if %16 -> (i1) {
      scf.yield %true : i1
    } else {
      %19 = call @_ZNKSt6vectorI6recordSaIS0_EE8max_sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> i64
      %20 = arith.cmpi sgt, %14, %19 : i64
      scf.yield %20 : i1
    }
    %18 = scf.if %17 -> (i64) {
      %19 = call @_ZNKSt6vectorI6recordSaIS0_EE8max_sizeEv(%arg0) : (!llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> i64
      scf.yield %19 : i64
    } else {
      scf.yield %14 : i64
    }
    return %18 : i64
  }
  func @_ZN9__gnu_cxxmiIP6recordSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%arg0: !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, %arg1: !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = call @_ZNK9__gnu_cxx17__normal_iteratorIP6recordSt6vectorIS1_SaIS1_EEE4baseEv(%arg0) : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %1 = llvm.load %0 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %2 = call @_ZNK9__gnu_cxx17__normal_iteratorIP6recordSt6vectorIS1_SaIS1_EEE4baseEv(%arg1) : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %3 = llvm.load %2 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %4 = llvm.ptrtoint %3 : !llvm.ptr<struct<(array<53 x i8>, f32)>> to i64
    %5 = llvm.ptrtoint %1 : !llvm.ptr<struct<(array<53 x i8>, f32)>> to i64
    %6 = arith.subi %5, %4 : i64
    return %6 : i64
  }
  func @_ZNSt6vectorI6recordSaIS0_EE5beginEv(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c1_i64 = arith.constant 1 : i64
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.alloca %c1_i64 x !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> : (i64) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    %1 = llvm.alloca %c1_i64 x !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> : (i64) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    %2 = llvm.alloca %c1_i64 x !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)> : (i64) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    %3 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>
    %4 = llvm.getelementptr %3[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>
    %5 = llvm.getelementptr %4[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    call @_ZN9__gnu_cxx17__normal_iteratorIP6recordSt6vectorIS1_SaIS1_EEEC1ERKS2_(%1, %5) : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>) -> ()
    %6 = llvm.load %1 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    llvm.store %6, %0 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    call @_ZN9__gnu_cxx17__normal_iteratorIP6recordSt6vectorIS1_SaIS1_EEEC1EOS6_(%2, %0) : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>) -> ()
    %7 = llvm.load %2 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>
    return %7 : !llvm.struct<(ptr<struct<(array<53 x i8>, f32)>>)>
  }
  func @_ZNSt12_Vector_baseI6recordSaIS0_EE11_M_allocateEm(%arg0: !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, %arg1: i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i64 = arith.constant 0 : i64
    %c0_i32 = arith.constant 0 : i32
    %0 = arith.cmpi ne, %arg1, %c0_i64 : i64
    %1 = scf.if %0 -> (!llvm.ptr<struct<(array<53 x i8>, f32)>>) {
      %2 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>
      %3 = llvm.bitcast %2 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>> to !llvm.ptr<struct<(i8)>>
      %4 = call @_ZNSt16allocator_traitsISaI6recordEE8allocateERS1_m(%3, %arg1) : (!llvm.ptr<struct<(i8)>>, i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
      scf.yield %4 : !llvm.ptr<struct<(array<53 x i8>, f32)>>
    } else {
      %2 = llvm.mlir.null : !llvm.ptr<struct<(array<53 x i8>, f32)>>
      scf.yield %2 : !llvm.ptr<struct<(array<53 x i8>, f32)>>
    }
    return %1 : !llvm.ptr<struct<(array<53 x i8>, f32)>>
  }
  func @_ZSt8_DestroyIP6recordS0_EvT_S2_RSaIT0_E(%arg0: !llvm.ptr<struct<(array<53 x i8>, f32)>>, %arg1: !llvm.ptr<struct<(array<53 x i8>, f32)>>, %arg2: !llvm.ptr<struct<(i8)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    call @_ZSt8_DestroyIP6recordEvT_S2_(%arg0, %arg1) : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>) -> ()
    return
  }
  func @_ZNSt12_Vector_baseI6recordSaIS0_EE19_M_get_Tp_allocatorEv(%arg0: !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>) -> !llvm.ptr<struct<(i8)>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>
    %1 = llvm.bitcast %0 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>> to !llvm.ptr<struct<(i8)>>
    return %1 : !llvm.ptr<struct<(i8)>>
  }
  func @_ZNSt12_Vector_baseI6recordSaIS0_EE13_M_deallocateEPS0_m(%arg0: !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, %arg1: !llvm.ptr<struct<(array<53 x i8>, f32)>>, %arg2: i64) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.mlir.null : !llvm.ptr<struct<(array<53 x i8>, f32)>>
    %1 = llvm.icmp "ne" %arg1, %0 : !llvm.ptr<struct<(array<53 x i8>, f32)>>
    scf.if %1 {
      %2 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>
      %3 = llvm.bitcast %2 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>> to !llvm.ptr<struct<(i8)>>
      call @_ZNSt16allocator_traitsISaI6recordEE10deallocateERS1_PS0_m(%3, %arg1, %arg2) : (!llvm.ptr<struct<(i8)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>, i64) -> ()
    }
    return
  }
  func @_ZN9__gnu_cxx17__normal_iteratorIP6recordSt6vectorIS1_SaIS1_EEEC1ERKS2_(%arg0: !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, %arg1: !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.load %arg1 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %1 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    llvm.store %0, %1 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    return
  }
  func @_ZNSaI6recordEC1Ev(%arg0: !llvm.ptr<struct<(i8)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    return
  }
  func @_ZNSaI7latLongEC1Ev(%arg0: !llvm.ptr<struct<(i8)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    return
  }
  func private @_ZN7latLongC1ERKS_(memref<?x2xf32>, memref<?x2xf32>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>}
  func @_ZNKSt6vectorI7latLongSaIS0_EE8max_sizeEv(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>
    %1 = call @_ZNKSt12_Vector_baseI7latLongSaIS0_EE19_M_get_Tp_allocatorEv(%0) : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>) -> !llvm.ptr<struct<(i8)>>
    %2 = call @_ZNSt16allocator_traitsISaI7latLongEE8max_sizeERKS1_(%1) : (!llvm.ptr<struct<(i8)>>) -> i64
    return %2 : i64
  }
  func @_ZNKSt6vectorI7latLongSaIS0_EE4sizeEv(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>
    %1 = llvm.getelementptr %0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>
    %2 = llvm.getelementptr %1[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    %3 = llvm.load %2 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %4 = llvm.getelementptr %1[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(f32, f32)>>>
    %5 = llvm.load %4 : !llvm.ptr<ptr<struct<(f32, f32)>>>
    %6 = llvm.ptrtoint %5 : !llvm.ptr<struct<(f32, f32)>> to i64
    %7 = llvm.ptrtoint %3 : !llvm.ptr<struct<(f32, f32)>> to i64
    %8 = arith.subi %7, %6 : i64
    return %8 : i64
  }
  func private @_ZSt20__throw_length_errorPKc(!llvm.ptr<i8>) attributes {llvm.linkage = #llvm.linkage<external>}
  func private @_ZSt3maxImERKT_S2_S2_(%arg0: memref<?xi64>, %arg1: memref<?xi64>) -> memref<?xi64> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %0 = memref.alloca() : memref<memref<?xi64>>
    %1 = memref.load %0[] : memref<memref<?xi64>>
    %2 = memref.load %arg0[%c0] : memref<?xi64>
    %3 = memref.load %arg1[%c0] : memref<?xi64>
    %4 = arith.cmpi slt, %2, %3 : i64
    %5 = arith.cmpi sge, %2, %3 : i64
    %6 = scf.if %4 -> (memref<?xi64>) {
      memref.store %arg1, %0[] : memref<memref<?xi64>>
      scf.yield %arg1 : memref<?xi64>
    } else {
      scf.yield %1 : memref<?xi64>
    }
    %7 = scf.if %5 -> (memref<?xi64>) {
      memref.store %arg0, %0[] : memref<memref<?xi64>>
      scf.yield %arg0 : memref<?xi64>
    } else {
      scf.yield %6 : memref<?xi64>
    }
    return %7 : memref<?xi64>
  }
  func @_ZNK9__gnu_cxx17__normal_iteratorIP7latLongSt6vectorIS1_SaIS1_EEE4baseEv(%arg0: memref<?x1xmemref<?x2xf32>>) -> memref<?xmemref<?x2xf32>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0 = arith.constant 0 : index
    %0 = "polygeist.subindex"(%arg0, %c0) : (memref<?x1xmemref<?x2xf32>>, index) -> memref<?xmemref<?x2xf32>>
    return %0 : memref<?xmemref<?x2xf32>>
  }
  func @_ZNSt16allocator_traitsISaI7latLongEE8allocateERS1_m(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: i64) -> memref<?x2xf32> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(i8)>> to !llvm.ptr<struct<(i8)>>
    %1 = llvm.mlir.null : !llvm.ptr<i8>
    %2 = call @_ZN9__gnu_cxx13new_allocatorI7latLongE8allocateEmPKv(%0, %arg1, %1) : (!llvm.ptr<struct<(i8)>>, i64, !llvm.ptr<i8>) -> memref<?x2xf32>
    return %2 : memref<?x2xf32>
  }
  func @_ZSt8_DestroyIP7latLongEvT_S2_(%arg0: memref<?x2xf32>, %arg1: memref<?x2xf32>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    call @_ZNSt12_Destroy_auxILb1EE9__destroyIP7latLongEEvT_S4_(%arg0, %arg1) : (memref<?x2xf32>, memref<?x2xf32>) -> ()
    return
  }
  func @_ZNSt16allocator_traitsISaI7latLongEE10deallocateERS1_PS0_m(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: memref<?x2xf32>, %arg2: i64) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(i8)>> to !llvm.ptr<struct<(i8)>>
    call @_ZN9__gnu_cxx13new_allocatorI7latLongE10deallocateEPS1_m(%0, %arg1, %arg2) : (!llvm.ptr<struct<(i8)>>, memref<?x2xf32>, i64) -> ()
    return
  }
  func private @_ZN6recordC1ERKS_(%arg0: !llvm.ptr<struct<(array<53 x i8>, f32)>>, %arg1: !llvm.ptr<struct<(array<53 x i8>, f32)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %0 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<array<53 x i8>>
    %1 = llvm.getelementptr %0[%c0_i32, %c0_i32] : (!llvm.ptr<array<53 x i8>>, i32, i32) -> !llvm.ptr<i8>
    %2 = llvm.getelementptr %arg1[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<array<53 x i8>>
    %3 = llvm.getelementptr %2[%c0_i32, %c0_i32] : (!llvm.ptr<array<53 x i8>>, i32, i32) -> !llvm.ptr<i8>
    affine.for %arg2 = 0 to 53 {
      %7 = arith.index_cast %arg2 : index to i64
      %8 = llvm.getelementptr %1[%7] : (!llvm.ptr<i8>, i64) -> !llvm.ptr<i8>
      %9 = llvm.getelementptr %3[%7] : (!llvm.ptr<i8>, i64) -> !llvm.ptr<i8>
      %10 = llvm.load %9 : !llvm.ptr<i8>
      llvm.store %10, %8 : !llvm.ptr<i8>
    }
    %4 = llvm.getelementptr %arg1[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<f32>
    %5 = llvm.load %4 : !llvm.ptr<f32>
    %6 = llvm.getelementptr %arg0[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, i32, i32) -> !llvm.ptr<f32>
    llvm.store %5, %6 : !llvm.ptr<f32>
    return
  }
  func @_ZNKSt6vectorI6recordSaIS0_EE8max_sizeEv(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>
    %1 = call @_ZNKSt12_Vector_baseI6recordSaIS0_EE19_M_get_Tp_allocatorEv(%0) : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>) -> !llvm.ptr<struct<(i8)>>
    %2 = call @_ZNSt16allocator_traitsISaI6recordEE8max_sizeERKS1_(%1) : (!llvm.ptr<struct<(i8)>>) -> i64
    return %2 : i64
  }
  func @_ZNKSt6vectorI6recordSaIS0_EE4sizeEv(%arg0: !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>)>> to !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>
    %1 = llvm.getelementptr %0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>
    %2 = llvm.getelementptr %1[%c0_i32, %c1_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %3 = llvm.load %2 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %4 = llvm.getelementptr %1[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %5 = llvm.load %4 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    %6 = llvm.ptrtoint %5 : !llvm.ptr<struct<(array<53 x i8>, f32)>> to i64
    %7 = llvm.ptrtoint %3 : !llvm.ptr<struct<(array<53 x i8>, f32)>> to i64
    %8 = arith.subi %7, %6 : i64
    return %8 : i64
  }
  func @_ZNK9__gnu_cxx17__normal_iteratorIP6recordSt6vectorIS1_SaIS1_EEE4baseEv(%arg0: !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>)>>, i32, i32) -> !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
    return %0 : !llvm.ptr<ptr<struct<(array<53 x i8>, f32)>>>
  }
  func @_ZNSt16allocator_traitsISaI6recordEE8allocateERS1_m(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: i64) -> !llvm.ptr<struct<(array<53 x i8>, f32)>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(i8)>> to !llvm.ptr<struct<(i8)>>
    %1 = llvm.mlir.null : !llvm.ptr<i8>
    %2 = call @_ZN9__gnu_cxx13new_allocatorI6recordE8allocateEmPKv(%0, %arg1, %1) : (!llvm.ptr<struct<(i8)>>, i64, !llvm.ptr<i8>) -> !llvm.ptr<struct<(array<53 x i8>, f32)>>
    return %2 : !llvm.ptr<struct<(array<53 x i8>, f32)>>
  }
  func @_ZSt8_DestroyIP6recordEvT_S2_(%arg0: !llvm.ptr<struct<(array<53 x i8>, f32)>>, %arg1: !llvm.ptr<struct<(array<53 x i8>, f32)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    call @_ZNSt12_Destroy_auxILb1EE9__destroyIP6recordEEvT_S4_(%arg0, %arg1) : (!llvm.ptr<struct<(array<53 x i8>, f32)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>) -> ()
    return
  }
  func @_ZNSt16allocator_traitsISaI6recordEE10deallocateERS1_PS0_m(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: !llvm.ptr<struct<(array<53 x i8>, f32)>>, %arg2: i64) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(i8)>> to !llvm.ptr<struct<(i8)>>
    call @_ZN9__gnu_cxx13new_allocatorI6recordE10deallocateEPS1_m(%0, %arg1, %arg2) : (!llvm.ptr<struct<(i8)>>, !llvm.ptr<struct<(array<53 x i8>, f32)>>, i64) -> ()
    return
  }
  func @_ZN9__gnu_cxx13new_allocatorI6recordEC1Ev(%arg0: !llvm.ptr<struct<(i8)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    return
  }
  func @_ZN9__gnu_cxx13new_allocatorI7latLongEC1Ev(%arg0: !llvm.ptr<struct<(i8)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    return
  }
  func @_ZNSt16allocator_traitsISaI7latLongEE8max_sizeERKS1_(%arg0: !llvm.ptr<struct<(i8)>>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(i8)>> to !llvm.ptr<struct<(i8)>>
    %1 = call @_ZNK9__gnu_cxx13new_allocatorI7latLongE8max_sizeEv(%0) : (!llvm.ptr<struct<(i8)>>) -> i64
    return %1 : i64
  }
  func @_ZNKSt12_Vector_baseI7latLongSaIS0_EE19_M_get_Tp_allocatorEv(%arg0: !llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>) -> !llvm.ptr<struct<(i8)>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>>
    %1 = llvm.bitcast %0 : !llvm.ptr<struct<(ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>, ptr<struct<(f32, f32)>>)>> to !llvm.ptr<struct<(i8)>>
    return %1 : !llvm.ptr<struct<(i8)>>
  }
  func @_ZN9__gnu_cxx13new_allocatorI7latLongE8allocateEmPKv(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: i64, %arg2: !llvm.ptr<i8>) -> memref<?x2xf32> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c8_i64 = arith.constant 8 : i64
    %0 = call @_ZNK9__gnu_cxx13new_allocatorI7latLongE8max_sizeEv(%arg0) : (!llvm.ptr<struct<(i8)>>) -> i64
    %1 = arith.cmpi sgt, %arg1, %0 : i64
    scf.if %1 {
      call @_ZSt17__throw_bad_allocv() : () -> ()
    }
    %2 = arith.muli %arg1, %c8_i64 : i64
    %3 = call @_Znwm(%2) : (i64) -> !llvm.ptr<i8>
    %4 = "polygeist.pointer2memref"(%3) : (!llvm.ptr<i8>) -> memref<?x2xf32>
    return %4 : memref<?x2xf32>
  }
  func @_ZNSt12_Destroy_auxILb1EE9__destroyIP7latLongEEvT_S4_(%arg0: memref<?x2xf32>, %arg1: memref<?x2xf32>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    return
  }
  func @_ZN9__gnu_cxx13new_allocatorI7latLongE10deallocateEPS1_m(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: memref<?x2xf32>, %arg2: i64) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = "polygeist.memref2pointer"(%arg1) : (memref<?x2xf32>) -> !llvm.ptr<i8>
    call @_ZdlPv(%0) : (!llvm.ptr<i8>) -> ()
    return
  }
  func @_ZNSt16allocator_traitsISaI6recordEE8max_sizeERKS1_(%arg0: !llvm.ptr<struct<(i8)>>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg0 : !llvm.ptr<struct<(i8)>> to !llvm.ptr<struct<(i8)>>
    %1 = call @_ZNK9__gnu_cxx13new_allocatorI6recordE8max_sizeEv(%0) : (!llvm.ptr<struct<(i8)>>) -> i64
    return %1 : i64
  }
  func @_ZNKSt12_Vector_baseI6recordSaIS0_EE19_M_get_Tp_allocatorEv(%arg0: !llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>) -> !llvm.ptr<struct<(i8)>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.getelementptr %arg0[%c0_i32, %c0_i32] : (!llvm.ptr<struct<(struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>)>>, i32, i32) -> !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>>
    %1 = llvm.bitcast %0 : !llvm.ptr<struct<(ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>, ptr<struct<(array<53 x i8>, f32)>>)>> to !llvm.ptr<struct<(i8)>>
    return %1 : !llvm.ptr<struct<(i8)>>
  }
  func @_ZN9__gnu_cxx13new_allocatorI6recordE8allocateEmPKv(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: i64, %arg2: !llvm.ptr<i8>) -> !llvm.ptr<struct<(array<53 x i8>, f32)>> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c60_i64 = arith.constant 60 : i64
    %0 = call @_ZNK9__gnu_cxx13new_allocatorI6recordE8max_sizeEv(%arg0) : (!llvm.ptr<struct<(i8)>>) -> i64
    %1 = arith.cmpi sgt, %arg1, %0 : i64
    scf.if %1 {
      call @_ZSt17__throw_bad_allocv() : () -> ()
    }
    %2 = arith.muli %arg1, %c60_i64 : i64
    %3 = call @_Znwm(%2) : (i64) -> !llvm.ptr<i8>
    %4 = llvm.bitcast %3 : !llvm.ptr<i8> to !llvm.ptr<struct<(array<53 x i8>, f32)>>
    return %4 : !llvm.ptr<struct<(array<53 x i8>, f32)>>
  }
  func @_ZNSt12_Destroy_auxILb1EE9__destroyIP6recordEEvT_S4_(%arg0: !llvm.ptr<struct<(array<53 x i8>, f32)>>, %arg1: !llvm.ptr<struct<(array<53 x i8>, f32)>>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    return
  }
  func @_ZN9__gnu_cxx13new_allocatorI6recordE10deallocateEPS1_m(%arg0: !llvm.ptr<struct<(i8)>>, %arg1: !llvm.ptr<struct<(array<53 x i8>, f32)>>, %arg2: i64) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.bitcast %arg1 : !llvm.ptr<struct<(array<53 x i8>, f32)>> to !llvm.ptr<i8>
    call @_ZdlPv(%0) : (!llvm.ptr<i8>) -> ()
    return
  }
  func @_ZNK9__gnu_cxx13new_allocatorI7latLongE8max_sizeEv(%arg0: !llvm.ptr<struct<(i8)>>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c2305843009213693951_i64 = arith.constant 2305843009213693951 : i64
    return %c2305843009213693951_i64 : i64
  }
  func private @_ZSt17__throw_bad_allocv() attributes {llvm.linkage = #llvm.linkage<external>}
  func private @_Znwm(%arg0: i64) -> !llvm.ptr<i8> attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c0_i64 = arith.constant 0 : i64
    %c1_i64 = arith.constant 1 : i64
    %0 = arith.cmpi eq, %arg0, %c0_i64 : i64
    %1 = select %0, %c1_i64, %arg0 : i64
    %2 = llvm.call @malloc(%1) : (i64) -> !llvm.ptr<i8>
    return %2 : !llvm.ptr<i8>
  }
  func private @_ZdlPv(%arg0: !llvm.ptr<i8>) attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %0 = llvm.mlir.null : !llvm.ptr<i8>
    %1 = llvm.icmp "ne" %arg0, %0 : !llvm.ptr<i8>
    scf.if %1 {
      %2 = llvm.bitcast %arg0 : !llvm.ptr<i8> to !llvm.ptr<i8>
      llvm.call @free(%2) : (!llvm.ptr<i8>) -> ()
    }
    return
  }
  func @_ZNK9__gnu_cxx13new_allocatorI6recordE8max_sizeEv(%arg0: !llvm.ptr<struct<(i8)>>) -> i64 attributes {llvm.linkage = #llvm.linkage<linkonce_odr>} {
    %c307445734561825860_i64 = arith.constant 307445734561825860 : i64
    return %c307445734561825860_i64 : i64
  }
  func private @_Z6euclidP7latLongPfiff(%arg0: memref<?x2xf32>, %arg1: memref<?xf32>, %arg2: i32, %arg3: f32, %arg4: f32) attributes {llvm.linkage = #llvm.linkage<external>} {
    %c1 = arith.constant 1 : index
    %c0 = arith.constant 0 : index
    %0 = "gpu.block_dim"() {dimension = "x"} : () -> index
    %1 = arith.index_cast %0 : index to i32
    %2 = "gpu.grid_dim"() {dimension = "x"} : () -> index
    %3 = arith.index_cast %2 : index to i32
    %4 = "gpu.block_id"() {dimension = "y"} : () -> index
    %5 = arith.index_cast %4 : index to i32
    %6 = arith.muli %3, %5 : i32
    %7 = "gpu.block_id"() {dimension = "x"} : () -> index
    %8 = arith.index_cast %7 : index to i32
    %9 = arith.addi %6, %8 : i32
    %10 = arith.muli %1, %9 : i32
    %11 = "gpu.thread_id"() {dimension = "x"} : () -> index
    %12 = arith.index_cast %11 : index to i32
    %13 = arith.addi %10, %12 : i32
    %14 = arith.index_cast %13 : i32 to index
    %15 = arith.cmpi slt, %13, %arg2 : i32
    scf.if %15 {
      %16 = memref.load %arg0[%14, %c0] : memref<?x2xf32>
      %17 = arith.subf %arg3, %16 : f32
      %18 = memref.load %arg0[%14, %c0] : memref<?x2xf32>
      %19 = arith.subf %arg3, %18 : f32
      %20 = arith.mulf %17, %19 : f32
      %21 = memref.load %arg0[%14, %c1] : memref<?x2xf32>
      %22 = arith.subf %arg4, %21 : f32
      %23 = memref.load %arg0[%14, %c1] : memref<?x2xf32>
      %24 = arith.subf %arg4, %23 : f32
      %25 = arith.mulf %22, %24 : f32
      %26 = arith.addf %20, %25 : f32
      %27 = math.sqrt %26 : f32
      memref.store %27, %arg1[%14] : memref<?xf32>
    }
    return
  }
}
Makefile:16: recipe for target 'nn' failed
make: *** [nn] Error 4
