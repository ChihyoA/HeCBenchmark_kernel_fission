
# Initial vals
OPTLEVEL = -O2
TARGET_GPU = 0

OUTPUT_MLIR = 0
OUTPUT_LLVMIR = 0

POLYGEIST_DEBUG = 0

ifeq ($(POLYGEIST_DEBUG),1)
    POLYGEIST_DIR = $(POLYGEIST_DIR_DEBUG)
    POLYGEIST_LLVM_DIR = $(POLYGEIST_LLVM_DIR_DEBUG)
else
    POLYGEIST_DIR = $(POLYGEIST_DIR_RELEASE)
    POLYGEIST_LLVM_DIR = $(POLYGEIST_LLVM_DIR_RELEASE)
endif

POLYGEIST_VER := $(shell (cd $(POLYGEIST_DIR) && git show --pretty=format:"%h" --no-patch))

POLYGEIST_MEMREF_ABI_0 = #--memref-abi=0
POLYGEIST_LLVM_STRUCT_ABI_0 = --struct-abi=0

ifeq ($(CONFIG),0)
    POLYGEIST_MEMREF_ABI_0 =
    POLYGEIST_LLVM_STRUCT_ABI_0 =

    CC = $(POLYGEIST_LLVM_DIR)/bin/clang
    CXX = $(POLYGEIST_LLVM_DIR)/bin/clang++
    NVCC = $(POLYGEIST_LLVM_DIR)/bin/clang++
    SYSTEM_LINKER = clang

    CC_FLAGS = $(OPTLEVEL) -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -resource-dir=$(POLYGEIST_LLVM_DIR)/lib/clang/16.0.0/ -fopenmp -I$(CUDA_PATH)/include/ # -Xclang -no-opaque-pointers
    CXX_FLAGS := $(CC_FLAGS)
    NVCC_FLAGS := $(CC_FLAGS) --cuda-gpu-arch=sm_80 --cuda-path=$(CUDA_PATH)/
    LINKER_FLAGS = $(OPTLEVEL) -ldl -lrt -lpthread -lm -L$(POLYGEIST_LLVM_DIR)/lib -lstdc++ -fopenmp -fopenmp=libomp -L/usr/local/cuda/lib64/ -lcudart_static -lcuda
    SYSTEM_LINKER_FLAGS = $(LINKER_FLAGS)

    COMPILER_NAME=clang.gpu

else ifeq ($(TARGET_GPU),0)
    # CPU configs
    ifeq ($(CONFIG),1)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute"
    COMPILER_NAME=polygeist
    endif

    ifeq ($(CONFIG),2)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut"
    COMPILER_NAME=polygeist.mincut
    endif

    ifeq ($(CONFIG),3)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut" -scal-rep=0 -raise-scf-to-affine
    COMPILER_NAME=polygeist.mincut.raise-scf-to-affine.scal-rep=0
    endif

    ifeq ($(CONFIG),4)
    #CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut" -scal-rep=1 -raise-scf-to-affine
    #COMPILER_NAME=polygeist.mincut.raise-scf-to-affine.scal-rep=1
    endif

    ifeq ($(CONFIG),5)
    #CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="continuation"
    #COMPILER_NAME=polygeist.continuation
    endif

    ifeq ($(CONFIG),6)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut" -openmp-opt=0
    COMPILER_NAME=polygeist.mincut.openmp-opt=0
    endif

    ifeq ($(CONFIG),7)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut" -barrier-opt=0
    COMPILER_NAME=polygeist.mincut.barrier-opt=0
    endif

    ifeq ($(CONFIG),8)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut" -barrier-opt=0 -scal-rep=0 -raise-scf-to-affine
    COMPILER_NAME=polygeist.mincut.raise-scf-to-affine.scal-rep=0.barrier-opt=0
    endif

    ifeq ($(CONFIG),9)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut" --inner-serialize=1
    COMPILER_NAME=polygeist.mincut.inner-serialize=1
    endif

    ifeq ($(CONFIG),10)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut" -scal-rep=0 -raise-scf-to-affine --inner-serialize=1
    COMPILER_NAME=polygeist.mincut.inner-serialize=1.raise-scf-to-affine.scal-rep=0
    endif

    ifeq ($(CONFIG),11)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut.ifhoist" -scal-rep=0 -raise-scf-to-affine --inner-serialize=1
    COMPILER_NAME=polygeist.mincut.ifhoist.inner-serialize=1.raise-scf-to-affine.scal-rep=0
    endif

    ifeq ($(CONFIG),12)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut.ifsplit" -scal-rep=0 -raise-scf-to-affine --inner-serialize=1
    COMPILER_NAME=polygeist.mincut.ifsplit.inner-serialize=1.raise-scf-to-affine.scal-rep=0
    endif

    ifeq ($(CONFIG),50)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.ifhoist"
    COMPILER_NAME=polygeist.ifhoist
    endif

    ifeq ($(CONFIG),51)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut.ifhoist"
    COMPILER_NAME=polygeist.mincut.ifhoist
    endif

    ifeq ($(CONFIG),52)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.ifsplit"
    COMPILER_NAME=polygeist.ifsplit
    endif

    ifeq ($(CONFIG),53)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut.ifsplit"
    COMPILER_NAME=polygeist.mincut.ifsplit
    endif

    ifeq ($(CONFIG),60)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut" -scal-rep=0 -raise-scf-to-affine --early-inner-serialize
    COMPILER_NAME=polygeist.mincut.early-inner-serialize.raise-scf-to-affine.scal-rep=0
    endif

    ifeq ($(CONFIG),70)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --cuda-lower --cpuify="distribute.mincut" -scal-rep=0 -raise-scf-to-affine --inner-serialize=1 -parallel-licm=0
    COMPILER_NAME=polygeist.mincut.inner-serialize=1.raise-scf-to-affine.scal-rep=0.npl
    endif

    # common options

    CC += -fopenmp $(OPTLEVEL)

    CXX = $(CC)
    NVCC = $(CC)
    LINKER = $(CC)
    SYSTEM_LINKER = $(POLYGEIST_LLVM_DIR)/bin/clang


    LINKER_FLAGS = -L$(CPUCUDA_BUILD_DIR)/src/ -lcpucudart -ldl -lrt -lpthread -lm -L$(POLYGEIST_LLVM_DIR)/lib -lstdc++ -fopenmp $(OPTLEVEL)
    SYSTEM_LINKER_FLAGS := $(LINKER_FLAGS) -fopenmp=libomp

    CC_FLAGS = $(OPTLEVEL) -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -resource-dir=$(POLYGEIST_LLVM_DIR)/lib/clang/16.0.0/ -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -I$(CUDA_PATH)/include/
    CXX_FLAGS := $(CC_FLAGS)
    NVCC_FLAGS := $(CC_FLAGS) --cuda-gpu-arch=sm_60 --cuda-path=$(CUDA_PATH)/

    COMPILER_NAME := $(POLYGEIST_VER).$(COMPILER_NAME)
else
    # GPU configs

    ifeq ($(CONFIG),1)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* #--memref-abi=0
    COMPILER_NAME=polygeist.gpu
    endif

    ifeq ($(CONFIG),2)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* -scal-rep=0 -raise-scf-to-affine
    COMPILER_NAME=polygeist.gpu.raise-scf-to-affine.scal-rep=0
    endif

    ifeq ($(CONFIG),3)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=0
    COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0
    endif

    ifeq ($(CONFIG),4)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1
    COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1
    endif

    ifeq ($(CONFIG),5)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=0 -preserve-gpu-kernel-structure=1
    COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.preserve-gpu-kernel-structure=1
    endif

    ifeq ($(CONFIG),6)
    CC = $(POLYGEIST_DIR)/bin/cgeist --function=* --emit-gpu-kernel-launch-bounds=0
    COMPILER_NAME=polygeist.gpu.emit-gpu-kernel-launch-bounds=0
    endif

    # common options
    CC += $(OPTLEVEL) #-fopenmp
    CC += -emit-cuda

    CXX = $(CC)
    NVCC = $(CC)
    LINKER = $(CC)
    SYSTEM_LINKER = $(POLYGEIST_LLVM_DIR)/bin/clang

    POLYGEIST_LLVM_ABI = #--memref-abi=0

    LINKER_FLAGS = -L/usr/local/cuda/lib64/ -lcudart_static -lcuda -ldl -lrt -lpthread -lm -L$(POLYGEIST_LLVM_DIR)/lib -lstdc++ $(OPTLEVEL) -fopenmp
    SYSTEM_LINKER_FLAGS := $(LINKER_FLAGS) -fopenmp=libomp

    CC_FLAGS = $(OPTLEVEL) -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -resource-dir=$(POLYGEIST_LLVM_DIR)/lib/clang/16.0.0/ -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -I$(CUDA_PATH)/include/
    CXX_FLAGS := $(CC_FLAGS)
    NVCC_FLAGS := $(CC_FLAGS) --cuda-gpu-arch=sm_80 --cuda-path=$(CUDA_PATH)/

    COMPILER_NAME := $(POLYGEIST_VER).$(COMPILER_NAME)
endif

ifeq ($(OUTPUT_MLIR),1)
    CC += -S
    CXX += -S
    NVCC += -S
    SYSTEM_LINKER = bash -c 'for obj in $$(find . -name \*.o); do echo $$obj; mv $$obj $$obj.conf$(CONFIG).mlir; done'; true
    LINKER = bash -c 'for obj in $$(find . -name \*.o); do echo $$obj; mv $$obj $$obj.conf$(CONFIG).mlir; done'; true
endif

ifeq ($(OUTPUT_LLVMIR),1)
    CC += -S -emit-llvm
    CXX += -S -emit-llvm
    NVCC += -S -emit-llvm
    SYSTEM_LINKER = bash -c 'for obj in $$(find . -name \*.o); do echo $$obj; mv $$obj $$obj.conf$(CONFIG).ll; done'; true
    LINKER = bash -c 'for obj in $$(find . -name \*.o); do echo $$obj; mv $$obj $$obj.conf$(CONFIG).ll; done'; true
endif
